{"version":3,"sources":["Modules/InetCatalog.js","Modules/InfoBlock/Text.js","Modules/InfoBlock/PrintImg.js","Modules/InfoBlock/InfoBlock.js","Modules/ProducerNom.js","Modules/FileBrowser.js","Modules/NewInfBlock.js","Modules/Status/reducer.js","Modules/Status/ModalApp.js","Modules/Status/ModalStore.js","Modules/Status/SecondModal.js","Modules/Status/StatusPrint.js","Modules/Status/TextLine.js","Modules/Status/App.js","Modules/Status/indexModal.js","Modules/Status/StatusImage.js","Modules/Status/ListImages.js","Modules/StatusApp/StatusText.js","Modules/StatusApp/GetStatus.js","Modules/StatusApp/ModalPart.js","Modules/StatusJournal/JournalTable.js","Modules/StatusJournal/StatusJournal.js","Modules/ChangePass/ChangePass.js","Modules/StatusApp/Status.js","Menu/MenuElement.js","GetData/GetData.js","Modules/Login/LoginApp.js","Menu/MainMenu.js","index.js"],"names":["InetCatalog","props","state","dataFromOut","data","this","module","Component","Text","text","PrintImg","printImg","img","setState","src","width","InfoBlock","printData","Dimmer","active","inverted","Loader","content","id","out","idBody","jsonBody","JSON","stringify","options","method","headers","body","fetch","resp","json","i","length","type","push","getData","idModule","ProducerNom","FileBrowser","NewInfBlock","reduction","xhr","action","undefined","modalAction","store","createStore","SecondModal","Modal","closeIcon","open","getState","onClose","dispatch","size","Header","icon","Content","Table","celled","selectable","Body","statusPrint","StatusPrint","Row","statusData","TextLine","Cell","statusLine","textAlign","statusText","ModalApp","stateList","modalStatus","sendData","bind","writeResponse","e","_firstElement","_secondElement","value","XMLHttpRequest","setRequestHeader","send","addEventListener","preventDefault","readyState","status","output","response","responseText","respJs","parse","repairBeginDate","console","log","repairEndDate","fullName","modelName","IMEI","equipment","issue","cost","comment","operation","Form","onSubmit","ref","a","placeholder","b","Button","onClick","openModal","modalValue","openAction","closeAction","connectedComponent","connect","closeModal","StatusImage","path","finalUrl","imagePath","encodePath","encodeURI","trigger","Icon","name","basic","image","Image","centered","ListImages","imgPath","imagesList","list","pathList","split","createImagesList","StatusText","operationsTable","statusElement","testState","cell","operations","listOfOperations","num","rowSpan","printVar","images","createOperations","createTable","GetStatus","printStatus","surname","number","statusBody","jsonStatus","ok","getStatusFromServer","ModalPart","statusModal","statusContent","changeState","closeModule","JournalTable","dataForPrint","changedComp","surName","repairNumber","printRow","printElement","ready","location","SN","HeaderCell","StatusJournal","onChange","date","Date","onChangeFirst","firstDate","handleChange","option","array","dataForOut","printJournal","getOptions","setMonth","getMonth","getTime","secondDate","_thirdElement","defaultValue","statusJournalBody","jsonStatusJournal","setDate","format","className","Dropdown","selection","key","ChangePass","message","sendPass","pass","_passElement","checkPass","_passCheckElement","sha1","require","encodePass","toUpperCase","sendChange","print","passBody","jsonPass","Status","MenuElement","handleItemClick","activeItem","menuItem","menuRoute","menuList","subMenuList","to","group1","Menu","Item","group3","idGroup2","item","group2","outData","exact","render","createSubMenu","createRoute","Grid","Column","fluid","vertical","tabular","stretched","Segment","style","overflow","minHeight","LoginApp","subContent","getLogin","logOut","_loginElement","hashPass","loginBody","role","updateRole","MainMenu","dynamicMenu","menuElementRoute","outerData","menuHeader","changeRole","menu","as","block","position","then","r","createComponents","menuElement","menuElementData","headerData","getMenu","getMenuComponent","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e77c0de0.chunk.js","sourcesContent":["import React,{Component} from \"react\";\r\n\r\nclass InetCatalog extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n        };\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.dataFromOut.module}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InetCatalog;","import React, {Component} from \"react\";\r\n\r\nclass Text extends Component{\r\n    render() {\r\n        return(\r\n            <p>{this.props.text}</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Text;","import React, {Component} from \"react\";\r\n\r\nclass PrintImg extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.printImg,\r\n            printImg: \"\"\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let printImg = \"data:image/jpg;base64,\" + this.state.dataFromOut.img;\r\n\r\n        this.setState({printImg: printImg});\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <p>\r\n                <img src={this.state.printImg} width={700}/>\r\n            </p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PrintImg;","import React, {Component} from \"react\";\r\nimport Text from \"./Text\";\r\nimport PrintImg from \"./PrintImg\";\r\n\r\nimport { Dimmer, Loader} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass InfoBlock extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n            data: \"...\",\r\n            printData:\r\n                <Dimmer active inverted>\r\n                    <Loader inverted content='Loading' />\r\n                </Dimmer>\r\n        };\r\n    }\r\n\r\n    async getData(id) {\r\n        let out = [];\r\n        let idBody = {\r\n            id: id\r\n        };\r\n        let jsonBody = JSON.stringify(idBody);\r\n        const options = {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\",\r\n                \"Accept\": \"application/json\"},\r\n            body: jsonBody\r\n        };\r\n\r\n        let resp = await fetch(\"infoBlock\", options);\r\n        let data = await resp.json();\r\n        await this.setState({data: data});\r\n        for (let i = 0; i < data.length; i++){\r\n            if (data[i].type === \"1\") {\r\n                out.push(<Text text={data[i].data}/>);\r\n            }\r\n            else if(data[i].type === \"2\"){\r\n                out.push(<PrintImg printImg={data[i]}/>);\r\n\r\n            }\r\n        }\r\n        this.setState({printData: out});\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(this.state.dataFromOut.idModule);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.printData}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfoBlock;","import React,{Component} from \"react\";\r\n\r\nclass ProducerNom extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n        };\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.dataFromOut.module}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProducerNom;","import React,{Component} from \"react\";\r\n\r\nclass FileBrowser extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n        };\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.dataFromOut.module}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileBrowser;","import React,{Component} from \"react\";\r\n\r\nclass NewInfBlock extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n        };\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.dataFromOut.module}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewInfBlock;","function reduction(state, action) {\r\n    if (state === undefined){\r\n        return {modalAction: false};\r\n    }\r\n\r\n    var modalAction = state.modalAction;\r\n\r\n    switch (action.type) {\r\n        case \"open\":\r\n            return {modalAction: true};\r\n        case \"close\":\r\n            return {modalAction: false};\r\n        default:\r\n            return modalAction;\r\n    }\r\n}\r\n\r\nexport default reduction;","import React,{Component} from \"react\";\r\nimport SecondModal from \"./SecondModal\";\r\nimport StatusPrint from \"./StatusPrint\";\r\nimport {Button, Dimmer, Form, Loader, Table} from 'semantic-ui-react'\r\nimport TextLine from \"./TextLine\";\r\n\r\nvar xhr;\r\n\r\nclass ModalApp extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stateList:\r\n                <Dimmer active inverted>\r\n                    <Loader inverted content='Loading' />\r\n                </Dimmer>,\r\n            modalStatus: false\r\n        };\r\n\r\n        this.sendData = this.sendData.bind(this);\r\n        this.writeResponse = this.writeResponse.bind(this);\r\n    }\r\n\r\n    sendData(e){\r\n        if ((this._firstElement !== \"\") && (this._secondElement !== \"\")) {\r\n            var surname = this._firstElement.value;\r\n            var number = this._secondElement.value;\r\n            xhr = new XMLHttpRequest();\r\n            var body = \"surname=\" + surname + \"&number=\" + number;\r\n\r\n            xhr.open(\"POST\", \"status\", true);\r\n            xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n            xhr.send(body);\r\n\r\n            this._firstElement.value = \"\";\r\n            this._secondElement.value = \"\";\r\n            xhr.addEventListener(\"readystatechange\",\r\n                this.writeResponse, false);\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    writeResponse() {\r\n        if (xhr.readyState === 4 && xhr.status === 200) {\r\n            var output = [];\r\n            var response = xhr.responseText;\r\n            var respJs = JSON.parse(response);\r\n\r\n            var repairBeginDate = <TextLine statusLine = \"дата начала ремонта\" statusText = {respJs.repairBeginDate}/>;\r\n            console.log(repairBeginDate);\r\n            output.push(<StatusPrint statusData={repairBeginDate}/>);\r\n\r\n            var repairEndDate =<TextLine statusLine = \"дата завершения ремонта\" statusText = {respJs.repairEndDate}/>;\r\n            console.log(repairEndDate);\r\n            output.push(<StatusPrint statusData={repairEndDate}/>);\r\n\r\n            var fullName =<TextLine statusLine = \"ФИО\" statusText = {respJs.fullName}/>;\r\n            console.log(fullName);\r\n            output.push(<StatusPrint statusData={fullName}/>);\r\n\r\n            var modelName =<TextLine statusLine = \"модель\" statusText = {respJs.modelName}/>;\r\n            console.log(modelName);\r\n            output.push(<StatusPrint statusData={modelName}/>);\r\n\r\n            var IMEI = <TextLine statusLine = \"IMEI\" statusText = {respJs.IMEI}/>;\r\n            console.log(IMEI);\r\n            output.push(<StatusPrint statusData={IMEI}/>);\r\n\r\n            var equipment =<TextLine statusLine = \"комплектация\" statusText = {respJs.equipment}/>;\r\n            console.log(equipment);\r\n            output.push(<StatusPrint statusData={equipment}/>);\r\n\r\n            var issue =<TextLine statusLine = \"неисправность\" statusText = {respJs.issue}/>;\r\n            console.log(issue);\r\n            output.push(<StatusPrint statusData={issue}/>);\r\n\r\n            var cost =<TextLine statusLine = \"стоимость ремонта\" statusText = {respJs.cost}/>;\r\n            console.log(cost);\r\n            output.push(<StatusPrint statusData={cost}/>);\r\n\r\n            var comment =<TextLine statusLine = \"комментарий\" statusText = {respJs.comment}/>;\r\n            console.log(comment);\r\n            output.push(<StatusPrint statusData={comment}/>);\r\n\r\n            var operation =<TextLine statusLine = \"выполненная работа\" statusText = {respJs.operation}/>;\r\n            console.log(operation);\r\n            output.push(<StatusPrint statusData={operation}/>);\r\n\r\n\r\n            this.setState({\r\n                stateList: output\r\n            });\r\n\r\n        }\r\n\r\n        else {\r\n            console.log(\"test of invalid username\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Form onSubmit={this.sendData}>\r\n                    <p><input ref={(a) => this._firstElement = a} placeholder={\"Введите фамилию\"}/></p>\r\n\r\n                    <p><input ref={(b) => this._secondElement = b} placeholder={\"Введите номер заявки\"}/></p>\r\n\r\n                    <p><Button type=\"submit\" onClick={this.props.openModal}>submit</Button></p>\r\n                </Form>\r\n                <p>{console.log(this.props.modalValue)}</p>\r\n                <SecondModal statusPrint = {this.state.stateList}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalApp;","import reduction from \"./reducer\";\r\nimport {createStore} from \"redux\";\r\n\r\nvar store = createStore(reduction);\r\n\r\nexport default store;","import React,{Component} from \"react\";\r\nimport store from \"./ModalStore\";\r\nimport { Header, Modal, Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass SecondModal extends Component{\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Modal\r\n                    closeIcon\r\n                    open={store.getState().modalAction}\r\n                    onClose={() => {store.dispatch({type: \"close\"})}}\r\n                    size='small'\r\n                >\r\n                    <Header icon='browser' content='Состояние ремонта' />\r\n                    <Modal.Content>\r\n                        <div>\r\n                            <Table celled selectable>\r\n                                <Table.Body>\r\n                                    {this.props.statusPrint}\r\n                                </Table.Body>\r\n                            </Table>\r\n                        </div>\r\n                    </Modal.Content>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SecondModal;","import React, {Component} from \"react\";\r\nimport { Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass StatusPrint extends Component{\r\n    render() {\r\n        return(\r\n            <Table.Row>\r\n                {this.props.statusData}\r\n            </Table.Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StatusPrint;","import React, {Component} from \"react\";\r\nimport { Table } from 'semantic-ui-react'\r\n\r\nclass TextLine extends Component{\r\n    render() {\r\n        return(\r\n            <Table.Row>\r\n                <Table.Cell>{this.props.statusLine}</Table.Cell>\r\n                <Table.Cell textAlign='right'>{this.props.statusText}</Table.Cell>\r\n            </Table.Row>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextLine;","import {connect} from \"react-redux\";\r\nimport ModalApp from \"./ModalApp\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        modalValue: state.modalAction\r\n    }\r\n}\r\n\r\nvar openAction = {type: \"open\"};\r\nvar closeAction = {type: \"close\"};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return{\r\n        openModal: function () {\r\n            return dispatch(openAction);\r\n        },\r\n        closeModal: function () {\r\n            return dispatch(closeAction);\r\n        }\r\n    };\r\n}\r\n\r\n\r\n\r\nvar connectedComponent = connect(\r\n    mapStateToProps, mapDispatchToProps\r\n    )(ModalApp);\r\n\r\nexport default connectedComponent;\r\n\r\n","import React, {Component} from \"react\";\r\nimport {Provider} from \"react-redux\";\r\nimport App from \"./App\";\r\nimport store from \"./ModalStore\";\r\n\r\n\r\nclass IndexModal extends Component {\r\n    render() {\r\n        return(\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IndexModal;","import React,{Component} from \"react\";\r\nimport {Modal, Image, Icon} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass StatusImage extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.path,\r\n            finalUrl: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let imagePath = \"statusImage?path=\" + this.state.dataFromOut;\r\n        let encodePath = encodeURI(imagePath);\r\n        this.setState({\r\n            finalUrl: encodePath\r\n        });\r\n        console.log(imagePath);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal trigger={<Icon name=\"picture\" size='huge' />} basic>\r\n                <Modal.Content image>\r\n                    <Image centered size='huge' src={this.state.finalUrl} />\r\n                </Modal.Content>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StatusImage;","import React,{Component} from \"react\";\r\nimport {Icon} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport StatusImage from \"./StatusImage\";\r\n\r\nclass ListImages extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.imgPath,\r\n            imagesList: []\r\n        };\r\n    }\r\n\r\n    createImagesList() {\r\n        let list = [];\r\n        let pathList = this.state.dataFromOut.split(\"$\");\r\n        for(let i = 0; i < pathList.length - 1; i++){\r\n            list.push(\r\n                <StatusImage path={pathList[i]}/>\r\n            )\r\n        }\r\n        this.setState({\r\n            imagesList: list\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createImagesList()\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.imagesList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListImages;","import React,{Component} from \"react\";\r\nimport {Table} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nimport ListImages from \"../Status/ListImages\";\r\n\r\nclass StatusText extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            operationsTable: \"\",\r\n            statusElement: \"\",\r\n            testState: \"123\"\r\n        };\r\n    }\r\n\r\n    createOperations(list){\r\n        let cell = [];\r\n        let operations = list.operation;\r\n        console.log((operations !== \"\") + \" работы\");\r\n        if ((operations !== undefined) && (operations !== \"\")){\r\n            let listOfOperations = operations.split(\"$\");\r\n            let num = listOfOperations.length - 1;\r\n            cell.push(\r\n                <Table.Row>\r\n                    <Table.Cell rowSpan={num}>Выполненые работы:</Table.Cell>\r\n                    <Table.Cell>{listOfOperations[0]}</Table.Cell>\r\n                </Table.Row>\r\n            );\r\n            for (let i = 1; i < num; i++){\r\n                cell.push(\r\n                    <Table.Row>\r\n                        <Table.Cell>{listOfOperations[i]}</Table.Cell>\r\n                    </Table.Row>\r\n                )\r\n            }\r\n            this.setState({\r\n                operationsTable: cell\r\n            });\r\n        }\r\n    }\r\n\r\n    createTable(list){\r\n        let printVar = [];\r\n        let repairBeginDate =\r\n            <Table.Row>\r\n                <Table.Cell>Дата начала ремонта</Table.Cell>\r\n                <Table.Cell>{list.repairBeginDate}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(repairBeginDate);\r\n\r\n        let repairEndDate =\r\n            <Table.Row>\r\n                <Table.Cell>Дата завершения ремонта</Table.Cell>\r\n                <Table.Cell>{list.repairEndDate}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(repairEndDate);\r\n\r\n        let state =\r\n            <Table.Row>\r\n                <Table.Cell>Состояние ремонта</Table.Cell>\r\n                <Table.Cell>{list.state}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(state);\r\n\r\n        let fullName =\r\n            <Table.Row>\r\n                <Table.Cell>ФИО</Table.Cell>\r\n                <Table.Cell>{list.fullName}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(fullName);\r\n\r\n        let modelName =\r\n            <Table.Row>\r\n                <Table.Cell>Модель</Table.Cell>\r\n                <Table.Cell>{list.modelName}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(modelName);\r\n\r\n        let IMEI =\r\n            <Table.Row>\r\n                <Table.Cell>IMEI</Table.Cell>\r\n                <Table.Cell>{list.IMEI}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(IMEI);\r\n\r\n        let equipment =\r\n            <Table.Row>\r\n                <Table.Cell>Комплектация</Table.Cell>\r\n                <Table.Cell>{list.equipment}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(equipment);\r\n\r\n        let issue =\r\n            <Table.Row>\r\n                <Table.Cell>Неисправность</Table.Cell>\r\n                <Table.Cell>{list.issue}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(issue);\r\n\r\n        let cost =\r\n            <Table.Row>\r\n                <Table.Cell>Стоимость ремонта</Table.Cell>\r\n                <Table.Cell>{list.cost}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(cost);\r\n\r\n        let comment =\r\n            <Table.Row>\r\n                <Table.Cell>Комментарий</Table.Cell>\r\n                <Table.Cell>{list.comment}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(comment);\r\n\r\n        printVar.push(this.state.operationsTable);\r\n\r\n        let images =\r\n            <Table.Row>\r\n                <Table.Cell>Фотографии ремонта</Table.Cell>\r\n                <Table.Cell>\r\n                    <ListImages imgPath={list.images}/>\r\n                </Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(images);\r\n\r\n        this.setState({\r\n            statusElement: printVar\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.createOperations(this.props.text);\r\n        await this.createTable(this.props.text);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table celled selectable>\r\n                <Table.Body>\r\n                        {this.state.statusElement}\r\n                </Table.Body>\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatusText;","import React,{Component} from \"react\";\r\nimport StatusText from \"./StatusText\";\r\nimport {Dimmer, Loader} from \"semantic-ui-react\";\r\n\r\nclass GetStatus extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            printStatus: \"\"\r\n        };\r\n    }\r\n\r\n    async getStatusFromServer(){\r\n        let surname = this.props.name;\r\n        let number = this.props.number;\r\n        let statusBody = {\r\n            surname: surname,\r\n            number: number\r\n        }\r\n        let jsonStatus = JSON.stringify(statusBody);\r\n        const options = {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\",\r\n                \"Accept\": \"application/json\"},\r\n            body: jsonStatus\r\n        };\r\n        if ((surname !== \"\" && number !== \"\") || (surname !== undefined && number !== undefined)){\r\n            this.setState({printStatus:\r\n                    <Dimmer active inverted>\r\n                        <Loader inverted content='Loading' />\r\n                    </Dimmer>\r\n            });\r\n            let resp = await fetch(\"status\", options);\r\n            if (resp.ok) {\r\n                let json = await resp.json();\r\n                console.log(json);\r\n                if (json === null){\r\n                    this.setState({printStatus: \"Неправильно введена фамилия или номер заявки\"});\r\n                }\r\n                else this.setState({printStatus: <StatusText text = {json}/>});\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getStatusFromServer();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.printStatus}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GetStatus;","import React,{Component} from \"react\";\r\nimport {Button, Header, Form, Modal, Dimmer, Loader} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport GetStatus from \"./GetStatus\";\r\n\r\nclass ModalPart extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            statusModal: this.props.statusModal,\r\n            statusContent: \"\"\r\n        };\r\n        this.changeState = this.changeState.bind(this);\r\n    }\r\n\r\n    async changeState(){\r\n        await this.setState({statusModal: false});\r\n        await this.props.closeModule();\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.setState({statusContent:\r\n                <GetStatus\r\n                    name = {this.props.name}\r\n                    number = {this.props.number}\r\n                />\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Modal\r\n                    open={this.state.statusModal}\r\n                    onClose={this.changeState}\r\n                    closeIcon\r\n                >\r\n                    <Header icon='archive' content='Состояние заявки'/>\r\n                    <Modal.Content>\r\n                        {this.state.statusContent}\r\n                    </Modal.Content>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalPart;","import React, {Component} from \"react\";\r\nimport { Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport ModalPart from \"../StatusApp/ModalPart\";\r\n\r\nclass JournalTable extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n            dataForPrint: \"\",\r\n            statusModal: true,\r\n            changedComp: \"\"\r\n        };\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModule = this.closeModule.bind(this);\r\n    }\r\n\r\n    closeModule(){\r\n        this.setState({changedComp: \"\"})\r\n    }\r\n\r\n    async openModal(surName, repairNumber){\r\n        let name = surName;\r\n        let number = repairNumber;\r\n        let b = <ModalPart\r\n            statusModal = {this.state.statusModal}\r\n            closeModule = {this.closeModule}\r\n            name = {name}\r\n            number = {number}\r\n        />;\r\n        await this.setState({changedComp: b});\r\n    }\r\n\r\n    createTable(){\r\n\r\n        let printRow = [];\r\n        let list = this.state.dataFromOut;\r\n        console.log(list);\r\n        console.log(list.length);\r\n        if (list.length !== 0) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                let printElement =\r\n                    <Table.Row onClick = {this.openModal.bind(this, list[i].fullName, list[i].number)}>\r\n                        <Table.Cell>{list[i].ready}</Table.Cell>\r\n                        <Table.Cell>{list[i].state}</Table.Cell>\r\n                        <Table.Cell> </Table.Cell>\r\n                        <Table.Cell>{list[i].number}</Table.Cell>\r\n                        <Table.Cell>{list[i].repairBeginDate}</Table.Cell>\r\n                        <Table.Cell>{list[i].location}</Table.Cell>\r\n                        <Table.Cell>{list[i].modelName}</Table.Cell>\r\n                        <Table.Cell>{list[i].SN}</Table.Cell>\r\n                        <Table.Cell>{list[i].IMEI}</Table.Cell>\r\n                        <Table.Cell>{list[i].cost}</Table.Cell>\r\n                        <Table.Cell>{list[i].fullName}</Table.Cell>\r\n                    </Table.Row>;\r\n                printRow.push(printElement);\r\n            }\r\n            this.setState({dataForPrint: printRow})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createTable();\r\n        console.log(this.state.dataFromOut)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Table celled selectable>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Готово к выдаче</Table.HeaderCell>\r\n                            <Table.HeaderCell>Статус</Table.HeaderCell>\r\n                            <Table.HeaderCell>Тип ремонта</Table.HeaderCell>\r\n                            <Table.HeaderCell>Номер заявки</Table.HeaderCell>\r\n                            <Table.HeaderCell>Дата начала ремонта</Table.HeaderCell>\r\n                            <Table.HeaderCell>Текущее местоположение</Table.HeaderCell>\r\n                            <Table.HeaderCell>Модель</Table.HeaderCell>\r\n                            <Table.HeaderCell>Серийный номер</Table.HeaderCell>\r\n                            <Table.HeaderCell>IMEI</Table.HeaderCell>\r\n                            <Table.HeaderCell>Сумма</Table.HeaderCell>\r\n                            <Table.HeaderCell>Клиент</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {this.state.dataForPrint}\r\n                    </Table.Body>\r\n                </Table>\r\n                {this.state.changedComp}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JournalTable;","import React, {Component} from \"react\";\r\nimport ModernDatepicker from 'react-modern-datepicker';\r\nimport {Dropdown, Form, Button, Loader, Dimmer} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"./StatusJournal.css\"\r\nimport JournalTable from \"./JournalTable\";\r\n\r\nclass StatusJournal extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date(),\r\n            firstDate: new Date(),\r\n            option: \"\",\r\n            array: \"\",\r\n            dataForOut: \"\",\r\n            printJournal: \"\"\r\n        };\r\n        this.getOptions = this.getOptions.bind(this);\r\n    }\r\n\r\n    setDate(){\r\n        let date = new Date();\r\n        date.setMonth(date.getMonth() - 2);\r\n        this.setState({firstDate: date});\r\n    }\r\n\r\n    async getOptions(){\r\n        let firstDate = this.state.date.getTime();\r\n        let secondDate = this.state.firstDate.getTime();\r\n        let option;\r\n        if (this._thirdElement.props.value === undefined){\r\n            option = this._thirdElement.props.defaultValue;\r\n        }\r\n        else {\r\n            option = this._thirdElement.props.value;\r\n        }\r\n        await this.setState({array: [firstDate, secondDate, option]});\r\n        await this.sendData();\r\n    }\r\n\r\n    async sendData(){\r\n        this.setState({printJournal:\r\n                <Dimmer active inverted>\r\n                    <Loader inverted content='Loading' />\r\n                </Dimmer>\r\n        });\r\n        let statusJournalBody = {\r\n            firstDate: this.state.array[0],\r\n            secondDate: this.state.array[1],\r\n            option: this.state.array[2]\r\n        }\r\n        let jsonStatusJournal = JSON.stringify(statusJournalBody);\r\n        const options = {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\",\r\n                \"Accept\": \"application/json\"},\r\n            body: jsonStatusJournal\r\n        };\r\n        let resp = await fetch(\"statusJournal\", options);\r\n        if (resp.ok) {\r\n            let data = await resp.json();\r\n            this.setState({dataForOut: data});\r\n            this.setState({printJournal: <JournalTable data={this.state.dataForOut}/>});\r\n            console.log(data)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setDate();\r\n    }\r\n\r\n    onChange = date => this.setState({ date: new Date(date.split(\"-\")[2], date.split(\"-\")[1] - 1, date.split(\"-\")[0])});\r\n    onChangeFirst = firstDate => this.setState({ firstDate: new Date(firstDate.split(\"-\")[2], firstDate.split(\"-\")[1] - 1, firstDate.split(\"-\")[0]) });\r\n    handleChange = (e, { value }) => this.setState({ value });\r\n\r\n    render() {\r\n        const options = [\r\n            { key: 1, text: 'Все за период', value: 1 },\r\n            { key: 2, text: 'Готово к выдаче', value: 2 },\r\n            { key: 3, text: 'Не готово к выдаче (ремонтируется)', value: 3 },\r\n        ];\r\n        const { value } = this.state;\r\n        return(\r\n            <Form onSubmit={this.getOptions}>\r\n                Журнал заявок с\r\n                <p><ModernDatepicker\r\n                    ref={(a) => this._firstElement = a}\r\n                    onChange={this.onChangeFirst}\r\n                    date={this.state.firstDate}\r\n                    format={'DD-MM-YYYY'}\r\n                    className=\"color\"\r\n                /></p>\r\n                <p>по</p>\r\n                <p><ModernDatepicker\r\n                    ref={(a) => this._secondElement = a}\r\n                    onChange={this.onChange}\r\n                    date={this.state.date}\r\n                    format={'DD-MM-YYYY'}\r\n                    className=\"color\"\r\n                /></p>\r\n                <p>\r\n                    <Dropdown\r\n                        ref={(a) => this._thirdElement = a}\r\n                        selection\r\n                        options={options}\r\n                        defaultValue={1}\r\n                        onChange={this.handleChange}\r\n                        value={value}\r\n                    />\r\n                    <Button type=\"submit\">Открыть</Button>\r\n                </p>\r\n                <p>{this.state.printJournal}</p>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StatusJournal;","import React,{Component} from \"react\";\r\nimport {Button, Form} from \"semantic-ui-react\";\r\nimport 'js-sha1';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass ChangePass extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            message: \"\"\r\n        };\r\n        this.sendPass = this.sendPass.bind(this);\r\n    }\r\n\r\n    async sendPass(e){\r\n        let pass = this._passElement.value;\r\n        let checkPass = this._passCheckElement.value;\r\n        let sha1 = require('sha1');\r\n        let encodePass = sha1(pass).toUpperCase();\r\n\r\n        let message = await this.sendChange(pass, checkPass, encodePass);\r\n        let print = <p>{message}</p>;\r\n        this.setState({message: print})\r\n    }\r\n\r\n    async sendChange(pass, checkPass, encodePass) {\r\n        let passBody = {\r\n            pass: encodePass\r\n        }\r\n        let jsonPass = JSON.stringify(passBody);\r\n        const options = {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\",\r\n                \"Accept\": \"application/json\"},\r\n            body: jsonPass\r\n        };\r\n        if ((pass !== \"\" && checkPass !== \"\") && (pass === checkPass)){\r\n            let resp = await fetch(\"changePass\", options);\r\n            if (resp.ok) {\r\n                let data = await resp.json();\r\n                console.log(data)\r\n                return \"Пароль изменен\";\r\n            }\r\n        }\r\n        else if(pass !== checkPass){\r\n            return \"Введенные пароли не совпадают\";\r\n        }\r\n        else if(pass === \"\" && checkPass === \"\"){\r\n            return \"Введите новый пароль\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Form onSubmit={this.sendPass}>\r\n                <p><input ref={(a) => this._passElement = a} placeholder={\"Введите новый пароль\"}/></p>\r\n                <p><input ref={(a) => this._passCheckElement = a} placeholder={\"Повторно введите новый пароль\"}/></p>\r\n                <p><Button type=\"submit\">submit</Button></p>\r\n                {this.state.message}\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangePass;","import React, {Component} from \"react\";\r\nimport {Button, Header, Form, Modal, Dimmer, Loader} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport ModalPart from \"./ModalPart\";\r\n\r\nclass Status extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            statusModal: true,\r\n            changedComp: \"\"\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModule = this.closeModule.bind(this);\r\n    }\r\n\r\n    closeModule(){\r\n        this.setState({changedComp: \"\"})\r\n    }\r\n\r\n    async openModal(){\r\n        let name = this._firstElement.value;\r\n        let number = this._secondElement.value;\r\n        let b = <ModalPart\r\n            statusModal = {this.state.statusModal}\r\n            closeModule = {this.closeModule}\r\n            name = {name}\r\n            number = {number}\r\n        />;\r\n        await this.setState({changedComp: b});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n\r\n            <Form>\r\n                <p><input ref={(a) => this._firstElement = a} placeholder={\"Введите фамилию\"}/></p>\r\n\r\n                <p><input ref={(b) => this._secondElement = b} placeholder={\"Введите номер заявки\"}/></p>\r\n\r\n                <p><Button type=\"submit\" onClick={this.openModal}>Показать</Button></p>\r\n                {this.state.changedComp}\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Status;","import React,{Component} from \"react\";\r\nimport { Dropdown, Menu, Grid, Segment } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {\r\n    Route,\r\n    NavLink,\r\n    HashRouter\r\n} from \"react-router-dom\";\r\n\r\nimport InetCatalog from \"../Modules/InetCatalog\";\r\nimport InfoBlock from \"../Modules/InfoBlock/InfoBlock\";\r\nimport ProducerNom from \"../Modules/ProducerNom\";\r\nimport FileBrowser from \"../Modules/FileBrowser\";\r\nimport NewInfBlock from \"../Modules/NewInfBlock\";\r\nimport IndexModal from \"../Modules/Status/indexModal\";\r\nimport StatusJournal from \"../Modules/StatusJournal/StatusJournal\";\r\nimport ChangePass from \"../Modules/ChangePass/ChangePass\";\r\nimport Status from \"../Modules/StatusApp/Status\";\r\n\r\nclass MenuElement extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n            menuItem: \"\",\r\n            activeItem: \"\",\r\n            menuRoute: \"\"\r\n        };\r\n    }\r\n\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n    createSubMenu(){\r\n        let data = this.state.dataFromOut;\r\n        let menuList = [];\r\n        let subMenuList = [];\r\n\r\n        for (let i = 0; i < data.length; i++){\r\n            if (i === 0) {\r\n                menuList.push(\r\n                    <NavLink to={\"/\" + data[i].group1 + \"/\"}>\r\n                        <Menu.Item\r\n                            name={data[i].group3}\r\n                            active={this.state.activeItem === data[i].group3}\r\n                            onClick={this.handleItemClick}\r\n                        />\r\n                    </NavLink>\r\n                )\r\n            }\r\n            else if (data[i].idGroup2 === \"0\"){\r\n                menuList.push(\r\n                    <NavLink to={\"/\" + data[i].group1 + \"/\" + data[i].group3}>\r\n                        <Menu.Item\r\n                            name={data[i].group3}\r\n                            active={this.state.activeItem === data[i].group3}\r\n                            onClick={this.handleItemClick}\r\n                        />\r\n                    </NavLink>\r\n                )\r\n            }\r\n            else {\r\n                if(i !== data.length - 1 && data[i].idGroup2 === data[i + 1].idGroup2){\r\n                    subMenuList.push(\r\n                        <NavLink to={\"/\" + data[i].group1 + \"/\" + data[i].group3}>\r\n                            <Dropdown.Item>{data[i].group3}</Dropdown.Item>\r\n                        </NavLink>\r\n                    )\r\n                }\r\n                else {\r\n                    subMenuList.push(\r\n                        <NavLink to={\"/\" + data[i].group1 + \"/\" + data[i].group3}>\r\n                            <Dropdown.Item>{data[i].group3}</Dropdown.Item>\r\n                        </NavLink>\r\n                    );\r\n                    menuList.push(\r\n                        <Dropdown item text = {data[i].group2}>\r\n                            <Dropdown.Menu>\r\n                                {subMenuList}\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    );\r\n                    subMenuList = [];\r\n                }\r\n            }\r\n        }\r\n        this.setState({menuItem: menuList});\r\n    }\r\n\r\n    createRoute(){\r\n        let data = this.state.dataFromOut;\r\n        let menuRoute = [];\r\n\r\n        for (let i = 0; i < data.length; i++){\r\n            if(i === 0) {\r\n                if (data[i].module === \"~/REM/REM_Zayavka.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <Status data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/Spr/SprInetCatalog.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <InetCatalog data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/ART/ART_FormaElementaInfBlock.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <InfoBlock data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/Spr/ProducerNom/SprProducerNom.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <ProducerNom data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/KasFileBrowser/KasFileBrowser.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <FileBrowser data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/HLP/HLP_FormaSpiskaInfBlock.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <NewInfBlock data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/REM/REM_GurZForDialer.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <StatusJournal data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/ChangePassword.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <ChangePass data={outData} {...props}/>}/>);\r\n                }\r\n            }\r\n            else {\r\n                if (data[i].module === \"~/REM/REM_Zayavka.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <Status data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/Spr/SprInetCatalog.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <InetCatalog data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/ART/ART_FormaElementaInfBlock.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <InfoBlock data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/Spr/ProducerNom/SprProducerNom.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <ProducerNom data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/KasFileBrowser/KasFileBrowser.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <FileBrowser data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/HLP/HLP_FormaSpiskaInfBlock.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <NewInfBlock data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/REM/REM_GurZForDialer.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <StatusJournal data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/ChangePassword.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <ChangePass data={outData} {...props}/>}/>);\r\n                }\r\n            }\r\n        }\r\n        this.setState({menuRoute: menuRoute});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createSubMenu();\r\n        this.createRoute();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <HashRouter>\r\n                <Grid>\r\n                    <Grid.Column width={4}>\r\n                        <Menu fluid vertical tabular>\r\n                            {this.state.menuItem}\r\n                        </Menu>\r\n                    </Grid.Column>\r\n                    <Grid.Column stretched width={12}>\r\n                        <Segment style={{overflow: 'auto', minHeight: 490}}>\r\n                            {this.state.menuRoute}\r\n                        </Segment>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MenuElement;","async function getData() {\r\n    let url = \"menu\";\r\n    let list;\r\n    let response = await fetch(url);\r\n\r\n    if (response.ok) {\r\n\r\n        let json = await response.json();\r\n        list = await json;\r\n    }\r\n    return list;\r\n}\r\n\r\nexport default getData;","import React,{Component} from \"react\";\r\nimport { Button, Header, Modal, Form } from 'semantic-ui-react'\r\nimport 'js-sha1';\r\n\r\nclass LoginApp extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            content: \"\",\r\n            subContent: \"\"\r\n        };\r\n        this.getLogin = this.getLogin.bind(this);\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    async getLogin(e){\r\n        let log = this._loginElement.value;\r\n        let pass = this._passElement.value;\r\n        let sha1 = require('sha1');\r\n        let hashPass = sha1(pass).toUpperCase();\r\n        let loginBody = {\r\n            log: log,\r\n            pass: hashPass\r\n        }\r\n        let jsonPass = JSON.stringify(loginBody)\r\n\r\n        const options = {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\",\r\n                \"Accept\": \"application/json\"},\r\n            body: jsonPass\r\n        };\r\n        if (log !== \"\" && pass !== \"\"){\r\n            let resp = await fetch(\"login\", options);\r\n            if (resp.ok){\r\n                let json = await resp.json();\r\n                let role = json.role;\r\n                if (role === \"guest\"){\r\n                    this.setState({subContent: \"Неправильно введен логин или пароль.\"});\r\n                }\r\n                else if (role === \"diler\"){\r\n                    this.setState({subContent: \"\"});\r\n                    this.setState({content: <Button active={this.props.updateRole()} onClick={this.logOut}>Выйти</Button>});\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async logOut() {\r\n        let resp = await fetch(\"logOut\");\r\n        if (resp.ok) {\r\n            let json = await resp.json();\r\n            let role = json.role;\r\n\r\n            if (role === \"guest\") {\r\n\r\n                this.setState({content:\r\n                        <div>\r\n                            <p><input ref={(a) => this._loginElement = a} placeholder={\"Введите логин\"}/></p>\r\n                            <p><input ref={(b) => this._passElement = b} placeholder={\"Введите пароль\"}/></p>\r\n                            <p><Button active={this.props.updateRole()} type=\"submit\">submit</Button></p>\r\n                        </div>\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resp = await fetch(\"checkLogin\");\r\n        if (resp.ok){\r\n            let json = await resp.json();\r\n            let role = json.role;\r\n            if (role === \"guest\"){\r\n                this.setState({content:\r\n                        <div>\r\n                            <p><input ref={(a) => this._loginElement = a} placeholder={\"Введите логин\"}/></p>\r\n                            <p><input ref={(b) => this._passElement = b} placeholder={\"Введите пароль\"}/></p>\r\n                            <p><Button type=\"submit\">submit</Button></p>\r\n                        </div>});\r\n            }\r\n            else if (role === \"diler\"){\r\n                this.setState({content: <Button onClick={this.logOut}>Выйти</Button>});\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal trigger={<Button icon=\"sign-in\">Вход</Button>} closeIcon>\r\n                <Header icon='sign-in' content='Вход' />\r\n                <Modal.Content>\r\n                    <Form onSubmit={this.getLogin}>\r\n                        {this.state.content}\r\n                    </Form>\r\n                    <p>{this.state.subContent}</p>\r\n                </Modal.Content>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginApp;","import React, {Component} from \"react\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport {Menu, Header, Segment, Grid} from 'semantic-ui-react';\r\nimport {\r\n    Route,\r\n    NavLink,\r\n    HashRouter\r\n} from \"react-router-dom\";\r\nimport MenuElement from \"./MenuElement\";\r\nimport getData from \"../GetData/GetData\";\r\nimport InfoBlock from \"../Modules/InfoBlock/InfoBlock\";\r\nimport LoginApp from \"../Modules/Login/LoginApp\";\r\n\r\nclass MainMenu extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dynamicMenu: \"…\",\r\n            menuElementRoute: \"…\",\r\n            outerData: \"\",\r\n            menuHeader: \"\",\r\n            role: \"guest\",\r\n        };\r\n        this.changeRole = this.changeRole.bind(this);\r\n    }\r\n\r\n    async getData(){\r\n        let data = await getData();\r\n        this.setState({outerData: data})\r\n    }\r\n\r\n    getMenu(){\r\n        let data = this.state.outerData;\r\n        let menu = [];\r\n\r\n        const {activeItem} = this.state;\r\n\r\n        this.setState({menuHeader:\r\n                <NavLink to={\"/\"}>\r\n                    <Header as='h3' block>\r\n                        КА сервис\r\n                    </Header>\r\n                </NavLink>\r\n        });\r\n        for (let i = 0; i < data.length; i++){\r\n            if(i === 0 || data[i].group1 !== data[i - 1].group1)\r\n            {menu.push(\r\n                <NavLink to={\"/\" + data[i].group1}>\r\n                    <Menu.Item\r\n                        name={data[i].group1}\r\n                        active={activeItem === data[i].group1}\r\n                        onClick={this.handleItemClick}\r\n                    >\r\n                        {data[i].group1}\r\n                    </Menu.Item>\r\n                </NavLink>)}\r\n        }\r\n        menu.push(\r\n            <Menu.Item position='right'>\r\n                    <LoginApp updateRole = {this.changeRole}/>\r\n            </Menu.Item>\r\n        );\r\n        this.setState({dynamicMenu: menu})\r\n    }\r\n\r\n    changeRole(){\r\n        this.setState({role: \"diler\"});\r\n        this.getData().then(r => this.createComponents());\r\n    };\r\n\r\n    getMenuComponent(){\r\n        let  data = this.state.outerData;\r\n        let menuElement = [];\r\n        let menuElementData = [];\r\n        let headerData = {idModule: \"11\"};\r\n        menuElement.push(<Route exact path={\"/\"}  render={(props)=>\r\n            <Grid.Column stretched width={12}>\r\n                <Segment>\r\n                    <InfoBlock data={headerData} {...props}/>\r\n                </Segment>\r\n            </Grid.Column>\r\n        }  />);\r\n        for (let i = 0; i < data.length; i++){\r\n\r\n            if((i === data.length - 1 || data[i].group1 === data[i + 1].group1) && i !== data.length - 1){\r\n                menuElementData.push(data[i]);\r\n\r\n            }\r\n            else {\r\n                menuElementData.push(data[i]);\r\n                let outData = menuElementData;\r\n                menuElement.push(<Route path={\"/\" + data[i].group1}  render={(props)=><MenuElement data={outData} {...props}/>}  />);\r\n                menuElementData = [];\r\n\r\n            }\r\n\r\n        }\r\n        this.setState({menuElementRoute: menuElement})\r\n    }\r\n\r\n    createComponents(){\r\n        this.getMenu();\r\n        this.getMenuComponent();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData().then(r => this.createComponents());\r\n    }\r\n\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <HashRouter>\r\n                {this.state.menuHeader}\r\n                <Menu>\r\n                    {this.state.dynamicMenu}\r\n                </Menu>\r\n                <div id=\"content\">\r\n                    {this.state.menuElementRoute}\r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainMenu;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MainMenu from \"./Menu/MainMenu\";\r\n\r\nReactDOM.render(\r\n    <MainMenu/>,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}