{"version":3,"sources":["Modules/InetCatalog.js","Modules/InfoBlock/Text.js","Modules/InfoBlock/PrintImg.js","Modules/InfoBlock/InfoBlock.js","Modules/ProducerNom.js","Modules/FileBrowser.js","Modules/NewInfBlock.js","Modules/Status/StatusImage.js","Modules/Status/ListImages.js","Modules/StatusApp/StatusText.js","Modules/StatusApp/GetStatus.js","Modules/StatusApp/ModalPart.js","Modules/StatusJournal/JournalTable.js","Modules/StatusJournal/StatusJournal.js","Modules/ChangePass/ChangePass.js","Modules/StatusApp/Status.js","Menu/MenuElement.js","GetData/GetData.js","Modules/Login/LoginApp.js","Menu/MainMenu.js","index.js"],"names":["InetCatalog","props","state","dataFromOut","data","this","module","Component","Text","text","PrintImg","printImg","img","setState","src","width","InfoBlock","printData","Dimmer","active","inverted","Loader","content","id","out","body","options","method","headers","JSON","stringify","fetch","resp","json","i","length","type","push","getData","idModule","ProducerNom","FileBrowser","NewInfBlock","StatusImage","path","finalUrl","imagePath","encodePath","encodeURI","console","log","Modal","trigger","Icon","name","size","basic","Content","image","Image","centered","ListImages","imgPath","imagesList","list","pathList","split","createImagesList","StatusText","operationsTable","statusElement","testState","cell","operations","operation","undefined","listOfOperations","num","Table","Row","Cell","rowSpan","printVar","repairBeginDate","repairEndDate","fullName","modelName","IMEI","equipment","issue","cost","comment","images","createOperations","createTable","celled","selectable","Body","GetStatus","printStatus","surname","number","ok","getStatusFromServer","ModalPart","statusModal","statusContent","changeState","bind","closeModule","open","onClose","closeIcon","Header","icon","JournalTable","dataForPrint","changedComp","openModal","surName","repairNumber","b","printRow","printElement","onClick","ready","location","SN","HeaderCell","StatusJournal","onChange","date","Date","onChangeFirst","firstDate","handleChange","e","value","option","array","dataForOut","printJournal","getOptions","setMonth","getMonth","getTime","secondDate","_thirdElement","defaultValue","sendData","setDate","Form","onSubmit","ref","a","_firstElement","format","className","_secondElement","Dropdown","selection","key","Button","ChangePass","message","sendPass","pass","_passElement","checkPass","_passCheckElement","sha1","require","encodePass","toUpperCase","sendChange","print","placeholder","Status","MenuElement","handleItemClick","activeItem","menuItem","menuRoute","menuList","subMenuList","to","group1","Menu","Item","group3","idGroup2","item","group2","outData","exact","render","createSubMenu","createRoute","Grid","Column","fluid","vertical","tabular","stretched","Segment","style","overflow","minHeight","response","LoginApp","subContent","getLogin","logOut","_loginElement","hashPass","role","updateRole","MainMenu","dynamicMenu","menuElementRoute","outerData","menuHeader","changeRole","menu","as","block","position","then","r","createComponents","menuElement","menuElementData","headerData","getMenu","getMenuComponent","ReactDOM","document","getElementById"],"mappings":"wVAkBeA,E,YAfX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,YAAa,EAAKF,MAAMG,MAHb,E,sEAOf,OACI,6BACKC,KAAKH,MAAMC,YAAYG,Y,GAVdC,aCQXC,E,iLANP,OACI,2BAAIH,KAAKJ,MAAMQ,U,GAHRF,aC0BJG,E,YAzBX,WAAYT,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,YAAa,EAAKF,MAAMU,SACxBA,SAAU,IAJC,E,iFAUf,IAAIA,EAAW,yBAA2BN,KAAKH,MAAMC,YAAYS,IAEjEP,KAAKQ,SAAS,CAACF,SAAUA,M,+BAKzB,OACI,2BACI,yBAAKG,IAAKT,KAAKH,MAAMS,SAAUI,MAAO,W,GApB/BR,a,kBC8DRS,E,YAxDX,WAAYf,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,YAAa,EAAKF,MAAMG,KACxBA,KAAM,MACNa,UACI,kBAACC,EAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,GACnB,kBAACC,EAAA,EAAD,CAAQD,UAAQ,EAACE,QAAQ,cAPtB,E,8GAYLC,G,wFACNC,EAAM,GACNC,EAAO,CACP,GAAMF,GAEJG,EAAU,CACZC,OAAQ,OACRC,QAAS,CACL,eAAgB,kCAChB,OAAU,oBAEdH,KAAMI,KAAKC,UAAUL,I,SAGRM,MAAM,YAAaL,G,cAAhCM,E,gBACaA,EAAKC,O,cAAlB7B,E,iBAEEC,KAAKQ,SAAS,CAACT,KAAMA,I,QAC3B,IAAS8B,EAAI,EAAGA,EAAI9B,EAAK+B,OAAQD,IACR,MAAjB9B,EAAK8B,GAAGE,KACRZ,EAAIa,KAAK,kBAAC,EAAD,CAAM5B,KAAML,EAAK8B,GAAG9B,QAER,MAAjBA,EAAK8B,GAAGE,MACZZ,EAAIa,KAAK,kBAAC,EAAD,CAAU1B,SAAUP,EAAK8B,MAI1C7B,KAAKQ,SAAS,CAACI,UAAWO,I,kJAK1BnB,KAAKiC,QAAQjC,KAAKH,MAAMC,YAAYoC,Y,+BAIpC,OACI,6BACKlC,KAAKH,MAAMe,e,GAnDJV,aCWTiC,E,YAfX,WAAYvC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,YAAa,EAAKF,MAAMG,MAHb,E,sEAOf,OACI,6BACKC,KAAKH,MAAMC,YAAYG,Y,GAVdC,aCgBXkC,E,YAfX,WAAYxC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,YAAa,EAAKF,MAAMG,MAHb,E,sEAOf,OACI,6BACKC,KAAKH,MAAMC,YAAYG,Y,GAVdC,aCgBXmC,E,YAfX,WAAYzC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,YAAa,EAAKF,MAAMG,MAHb,E,sEAOf,OACI,6BACKC,KAAKH,MAAMC,YAAYG,Y,GAVdC,a,gFC+BXoC,E,YA5BX,WAAY1C,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,YAAa,EAAKF,MAAM2C,KACxBC,SAAU,IAJC,E,iFASf,IAAIC,EAAY,oBAAsBzC,KAAKH,MAAMC,YAC7C4C,EAAaC,UAAUF,GAC3BzC,KAAKQ,SAAS,CACVgC,SAAUE,IAEdE,QAAQC,IAAIJ,K,+BAIZ,OACI,kBAACK,EAAA,EAAD,CAAOC,QAAS,kBAACC,EAAA,EAAD,CAAMC,KAAK,UAAUC,KAAK,SAAWC,OAAK,GACtD,kBAACL,EAAA,EAAMM,QAAP,CAAeC,OAAK,GAChB,kBAACC,EAAA,EAAD,CAAOC,UAAQ,EAACL,KAAK,OAAOzC,IAAKT,KAAKH,MAAM2C,iB,GAtBtCtC,aCoCXsD,E,YAlCX,WAAY5D,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,YAAa,EAAKF,MAAM6D,QACxBC,WAAY,IAJD,E,gFAWf,IAFA,IAAIC,EAAO,GACPC,EAAW5D,KAAKH,MAAMC,YAAY+D,MAAM,KACpChC,EAAI,EAAGA,EAAI+B,EAAS9B,OAAS,EAAGD,IACpC8B,EAAK3B,KACD,kBAAC,EAAD,CAAaO,KAAMqB,EAAS/B,MAGpC7B,KAAKQ,SAAS,CACVkD,WAAYC,M,0CAKhB3D,KAAK8D,qB,+BAIL,OACI,6BACK9D,KAAKH,MAAM6D,gB,GA7BHxD,aC8IV6D,E,YA5IX,WAAYnE,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTmE,gBAAiB,GACjBC,cAAe,GACfC,UAAW,OALA,E,8EASFP,GACb,IAAIQ,EAAO,GACPC,EAAaT,EAAKU,UAEtB,GADAzB,QAAQC,KAAoB,KAAfuB,GAAqB,8CACdE,IAAfF,GAA6C,KAAfA,EAAmB,CAClD,IAAIG,EAAmBH,EAAWP,MAAM,KACpCW,EAAMD,EAAiBzC,OAAS,EACpCqC,EAAKnC,KACD,kBAACyC,EAAA,EAAMC,IAAP,KACI,kBAACD,EAAA,EAAME,KAAP,CAAYC,QAASJ,GAArB,sGACA,kBAACC,EAAA,EAAME,KAAP,KAAaJ,EAAiB,MAGtC,IAAK,IAAI1C,EAAI,EAAGA,EAAI2C,EAAK3C,IACrBsC,EAAKnC,KACD,kBAACyC,EAAA,EAAMC,IAAP,KACI,kBAACD,EAAA,EAAME,KAAP,KAAaJ,EAAiB1C,MAI1C7B,KAAKQ,SAAS,CACVwD,gBAAiBG,O,kCAKjBR,GACR,IAAIkB,EAAW,GACXC,EACA,kBAACL,EAAA,EAAMC,IAAP,KACI,kBAACD,EAAA,EAAME,KAAP,iHACA,kBAACF,EAAA,EAAME,KAAP,KAAahB,EAAKmB,kBAE1BD,EAAS7C,KAAK8C,GAEd,IAAIC,EACA,kBAACN,EAAA,EAAMC,IAAP,KACI,kBAACD,EAAA,EAAME,KAAP,yIACA,kBAACF,EAAA,EAAME,KAAP,KAAahB,EAAKoB,gBAE1BF,EAAS7C,KAAK+C,GAEd,IAAIlF,EACA,kBAAC4E,EAAA,EAAMC,IAAP,KACI,kBAACD,EAAA,EAAME,KAAP,0GACA,kBAACF,EAAA,EAAME,KAAP,KAAahB,EAAK9D,QAE1BgF,EAAS7C,KAAKnC,GAEd,IAAImF,EACA,kBAACP,EAAA,EAAMC,IAAP,KACI,kBAACD,EAAA,EAAME,KAAP,2BACA,kBAACF,EAAA,EAAME,KAAP,KAAahB,EAAKqB,WAE1BH,EAAS7C,KAAKgD,GAEd,IAAIC,EACA,kBAACR,EAAA,EAAMC,IAAP,KACI,kBAACD,EAAA,EAAME,KAAP,6CACA,kBAACF,EAAA,EAAME,KAAP,KAAahB,EAAKsB,YAE1BJ,EAAS7C,KAAKiD,GAEd,IAAIC,EACA,kBAACT,EAAA,EAAMC,IAAP,KACI,kBAACD,EAAA,EAAME,KAAP,aACA,kBAACF,EAAA,EAAME,KAAP,KAAahB,EAAKuB,OAE1BL,EAAS7C,KAAKkD,GAEd,IAAIC,EACA,kBAACV,EAAA,EAAMC,IAAP,KACI,kBAACD,EAAA,EAAME,KAAP,iFACA,kBAACF,EAAA,EAAME,KAAP,KAAahB,EAAKwB,YAE1BN,EAAS7C,KAAKmD,GAEd,IAAIC,EACA,kBAACX,EAAA,EAAMC,IAAP,KACI,kBAACD,EAAA,EAAME,KAAP,uFACA,kBAACF,EAAA,EAAME,KAAP,KAAahB,EAAKyB,QAE1BP,EAAS7C,KAAKoD,GAEd,IAAIC,EACA,kBAACZ,EAAA,EAAMC,IAAP,KACI,kBAACD,EAAA,EAAME,KAAP,0GACA,kBAACF,EAAA,EAAME,KAAP,KAAahB,EAAK0B,OAE1BR,EAAS7C,KAAKqD,GAEd,IAAIC,EACA,kBAACb,EAAA,EAAMC,IAAP,KACI,kBAACD,EAAA,EAAME,KAAP,2EACA,kBAACF,EAAA,EAAME,KAAP,KAAahB,EAAK2B,UAE1BT,EAAS7C,KAAKsD,GAEdT,EAAS7C,KAAKhC,KAAKH,MAAMmE,iBAEzB,IAAIuB,EACA,kBAACd,EAAA,EAAMC,IAAP,KACI,kBAACD,EAAA,EAAME,KAAP,gHACA,kBAACF,EAAA,EAAME,KAAP,KACI,kBAAC,EAAD,CAAYlB,QAASE,EAAK4B,WAGtCV,EAAS7C,KAAKuD,GAEdvF,KAAKQ,SAAS,CACVyD,cAAeY,M,oKAKb7E,KAAKwF,iBAAiBxF,KAAKJ,MAAMQ,M,uBACjCJ,KAAKyF,YAAYzF,KAAKJ,MAAMQ,M,qIAKlC,OACI,kBAACqE,EAAA,EAAD,CAAOiB,QAAM,EAACC,YAAU,GACpB,kBAAClB,EAAA,EAAMmB,KAAP,KACS5F,KAAKH,MAAMoE,oB,GAtIX/D,aCqDV2F,E,YAtDX,WAAYjG,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTiG,YAAa,IAHF,E,gNAQXC,EAAU/F,KAAKJ,MAAMqD,KACrB+C,EAAShG,KAAKJ,MAAMoG,OACpB5E,EAAO,CACP,QAAW2E,EACX,OAAUC,GAEdpD,QAAQC,IAAIrB,KAAKC,UAAUL,IACrBC,EAAU,CACZC,OAAQ,OACRC,QAAS,CACL,eAAgB,kCAChB,OAAU,oBAEdH,KAAMI,KAAKC,UAAUL,MAER,KAAZ2E,GAA6B,KAAXC,QAA+B1B,IAAZyB,QAAoCzB,IAAX0B,G,wBAC/DhG,KAAKQ,SAAS,CAACsF,YACP,kBAACjF,EAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,GACnB,kBAACC,EAAA,EAAD,CAAQD,UAAQ,EAACE,QAAQ,e,SAGpBS,MAAM,SAAUL,G,YAA7BM,E,QACKsE,G,kCACYtE,EAAKC,O,QAAlBA,E,OACJgB,QAAQC,IAAIjB,GACC,OAATA,EACA5B,KAAKQ,SAAS,CAACsF,YAAa,oPAE3B9F,KAAKQ,SAAS,CAACsF,YAAa,kBAAC,EAAD,CAAY1F,KAAQwB,M,2PAM7D5B,KAAKkG,sB,qIAIL,OACI,6BACKlG,KAAKH,MAAMiG,iB,GAjDJ5F,aC4CTiG,E,YA1CX,WAAYvG,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTuG,YAAa,EAAKxG,MAAMwG,YACxBC,cAAe,IAEnB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBANJ,E,qMAUTvG,KAAKQ,SAAS,CAAC4F,aAAa,I,uBAC5BpG,KAAKJ,MAAM4G,c,gJAKjBxG,KAAKQ,SAAS,CAAC6F,cACP,kBAAC,EAAD,CACIpD,KAAQjD,KAAKJ,MAAMqD,KACnB+C,OAAUhG,KAAKJ,MAAMoG,a,+BAMjC,OACI,6BACI,kBAAClD,EAAA,EAAD,CACI2D,KAAMzG,KAAKH,MAAMuG,YACjBM,QAAS1G,KAAKsG,YACdK,WAAS,GAET,kBAACC,EAAA,EAAD,CAAQC,KAAK,UAAU5F,QAAQ,gGAC/B,kBAAC6B,EAAA,EAAMM,QAAP,KACKpD,KAAKH,MAAMwG,qB,GAnCZnG,aC4FT4G,E,YA3FX,WAAYlH,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,YAAa,EAAKF,MAAMG,KACxBgH,aAAc,GACdX,aAAa,EACbY,YAAa,IAGjB,EAAKC,UAAY,EAAKA,UAAUV,KAAf,gBACjB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBAVJ,E,2EAcfvG,KAAKQ,SAAS,CAACwG,YAAa,O,yEAGhBE,EAASC,G,kFACjBlE,EAAOiE,EACPlB,EAASmB,EACTC,EAAI,kBAAC,EAAD,CACJhB,YAAepG,KAAKH,MAAMuG,YAC1BI,YAAexG,KAAKwG,YACpBvD,KAAQA,EACR+C,OAAUA,I,SAERhG,KAAKQ,SAAS,CAACwG,YAAaI,I,6IAKlC,IAAIC,EAAW,GACX1D,EAAO3D,KAAKH,MAAMC,YAAY6D,KAGlC,GAFAf,QAAQC,IAAIc,GACZf,QAAQC,IAAIc,EAAK7B,QACG,IAAhB6B,EAAK7B,OAAc,CACnB,IAAK,IAAID,EAAI,EAAGA,EAAI8B,EAAK7B,OAAQD,IAAK,CAClC,IAAIyF,EACA,kBAAC7C,EAAA,EAAMC,IAAP,CAAW6C,QAAWvH,KAAKiH,UAAUV,KAAKvG,KAAM2D,EAAK9B,GAAGmD,SAAUrB,EAAK9B,GAAGmE,SACtE,kBAACvB,EAAA,EAAME,KAAP,KAAahB,EAAK9B,GAAG2F,OACrB,kBAAC/C,EAAA,EAAME,KAAP,KAAahB,EAAK9B,GAAGhC,OACrB,kBAAC4E,EAAA,EAAME,KAAP,UACA,kBAACF,EAAA,EAAME,KAAP,KAAahB,EAAK9B,GAAGmE,QACrB,kBAACvB,EAAA,EAAME,KAAP,KAAahB,EAAK9B,GAAGiD,iBACrB,kBAACL,EAAA,EAAME,KAAP,KAAahB,EAAK9B,GAAG4F,UACrB,kBAAChD,EAAA,EAAME,KAAP,KAAahB,EAAK9B,GAAGoD,WACrB,kBAACR,EAAA,EAAME,KAAP,KAAahB,EAAK9B,GAAG6F,IACrB,kBAACjD,EAAA,EAAME,KAAP,KAAahB,EAAK9B,GAAGqD,MACrB,kBAACT,EAAA,EAAME,KAAP,KAAahB,EAAK9B,GAAGwD,MACrB,kBAACZ,EAAA,EAAME,KAAP,KAAahB,EAAK9B,GAAGmD,WAE7BqC,EAASrF,KAAKsF,GAElBtH,KAAKQ,SAAS,CAACuG,aAAcM,O,0CAKjCrH,KAAKyF,cACL7C,QAAQC,IAAI7C,KAAKH,MAAMC,e,+BAIvB,OACI,6BACI,kBAAC2E,EAAA,EAAD,CAAOiB,QAAM,EAACC,YAAU,GACpB,kBAAClB,EAAA,EAAMmC,OAAP,KACI,kBAACnC,EAAA,EAAMC,IAAP,KACI,kBAACD,EAAA,EAAMkD,WAAP,yFACA,kBAAClD,EAAA,EAAMkD,WAAP,6CACA,kBAAClD,EAAA,EAAMkD,WAAP,sEACA,kBAAClD,EAAA,EAAMkD,WAAP,4EACA,kBAAClD,EAAA,EAAMkD,WAAP,iHACA,kBAAClD,EAAA,EAAMkD,WAAP,wIACA,kBAAClD,EAAA,EAAMkD,WAAP,6CACA,kBAAClD,EAAA,EAAMkD,WAAP,wFACA,kBAAClD,EAAA,EAAMkD,WAAP,aACA,kBAAClD,EAAA,EAAMkD,WAAP,uCACA,kBAAClD,EAAA,EAAMkD,WAAP,+CAGR,kBAAClD,EAAA,EAAMmB,KAAP,KACK5F,KAAKH,MAAMkH,eAGnB/G,KAAKH,MAAMmH,iB,GAtFD9G,aC2GZ0H,E,YAxGX,WAAYhI,GAAQ,IAAD,8BACf,4CAAMA,KAyDViI,SAAW,SAAAC,GAAI,OAAI,EAAKtH,SAAS,CAAEsH,KAAM,IAAIC,KAAKD,EAAKjE,MAAM,KAAK,GAAIiE,EAAKjE,MAAM,KAAK,GAAK,EAAGiE,EAAKjE,MAAM,KAAK,OA1D3F,EA2DnBmE,cAAgB,SAAAC,GAAS,OAAI,EAAKzH,SAAS,CAAEyH,UAAW,IAAIF,KAAKE,EAAUpE,MAAM,KAAK,GAAIoE,EAAUpE,MAAM,KAAK,GAAK,EAAGoE,EAAUpE,MAAM,KAAK,OA3DzH,EA4DnBqE,aAAe,SAACC,EAAD,OAAMC,EAAN,EAAMA,MAAN,OAAkB,EAAK5H,SAAS,CAAE4H,WA1D7C,EAAKvI,MAAQ,CACTiI,KAAM,IAAIC,KACVE,UAAW,IAAIF,KACfM,OAAQ,GACRC,MAAO,GACPC,WAAY,GACZC,aAAc,IAElB,EAAKC,WAAa,EAAKA,WAAWlC,KAAhB,gBAVH,E,uEAcf,IAAIuB,EAAO,IAAIC,KACfD,EAAKY,SAASZ,EAAKa,WAAa,GAChC3I,KAAKQ,SAAS,CAACyH,UAAWH,M,8JAItBG,EAAYjI,KAAKH,MAAMiI,KAAKc,UAC5BC,EAAa7I,KAAKH,MAAMoI,UAAUW,UAGlCP,OADmC/D,IAAnCtE,KAAK8I,cAAclJ,MAAMwI,MAChBpI,KAAK8I,cAAclJ,MAAMmJ,aAGzB/I,KAAK8I,cAAclJ,MAAMwI,M,SAEhCpI,KAAKQ,SAAS,CAAC8H,MAAO,CAACL,EAAWY,EAAYR,K,uBAC9CrI,KAAKgJ,W,kQAIXhJ,KAAKQ,SAAS,CAACgI,aACP,kBAAC3H,EAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,GACnB,kBAACC,EAAA,EAAD,CAAQD,UAAQ,EAACE,QAAQ,eAG/BI,EAAU,CACZC,OAAQ,OACRC,QAAS,CACL,eAAgB,oDACpBH,KAAM,aAAepB,KAAKH,MAAMyI,MAAM,GAAK,eAAiBtI,KAAKH,MAAMyI,MAAM,GAAK,WAAatI,KAAKH,MAAMyI,MAAM,I,SAEnG5G,MAAM,gBAAiBL,G,YAApCM,E,QACKsE,G,iCACYtE,EAAKC,O,OAAlB7B,E,OACJC,KAAKQ,SAAS,CAAC+H,WAAYxI,IAC3BC,KAAKQ,SAAS,CAACgI,aAAc,kBAAC,EAAD,CAAczI,KAAMC,KAAKH,MAAM0I,eAC5D3F,QAAQC,IAAI9C,G,iJAKhBC,KAAKiJ,Y,+BAOC,IAAD,OAMGb,EAAUpI,KAAKH,MAAfuI,MACR,OACI,kBAACc,EAAA,EAAD,CAAMC,SAAUnJ,KAAKyI,YAArB,mFAEI,2BAAG,kBAAC,IAAD,CACCW,IAAK,SAACC,GAAD,OAAO,EAAKC,cAAgBD,GACjCxB,SAAU7H,KAAKgI,cACfF,KAAM9H,KAAKH,MAAMoI,UACjBsB,OAAQ,aACRC,UAAU,WAEd,2CACA,2BAAG,kBAAC,IAAD,CACCJ,IAAK,SAACC,GAAD,OAAO,EAAKI,eAAiBJ,GAClCxB,SAAU7H,KAAK6H,SACfC,KAAM9H,KAAKH,MAAMiI,KACjByB,OAAQ,aACRC,UAAU,WAEd,2BACI,kBAACE,EAAA,EAAD,CACIN,IAAK,SAACC,GAAD,OAAO,EAAKP,cAAgBO,GACjCM,WAAS,EACTtI,QA5BA,CACZ,CAAEuI,IAAK,EAAGxJ,KAAM,uEAAiBgI,MAAO,GACxC,CAAEwB,IAAK,EAAGxJ,KAAM,mFAAmBgI,MAAO,GAC1C,CAAEwB,IAAK,EAAGxJ,KAAM,iLAAsCgI,MAAO,IA0BjDW,aAAc,EACdlB,SAAU7H,KAAKkI,aACfE,MAAOA,IAEX,kBAACyB,EAAA,EAAD,CAAQ9H,KAAK,UAAb,+CAEJ,2BAAI/B,KAAKH,MAAM2I,mB,GAnGHtI,aCqDb4J,G,mBAtDX,WAAYlK,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAM,CACPkK,QAAS,IAEb,EAAKC,SAAW,EAAKA,SAASzD,KAAd,gBALD,E,+GAQJ4B,G,wFACP8B,EAAOjK,KAAKkK,aAAa9B,MACzB+B,EAAYnK,KAAKoK,kBAAkBhC,MACnCiC,EAAOC,EAAQ,KACfC,EAAaF,EAAKJ,GAAMO,c,SAERxK,KAAKyK,WAAWR,EAAME,EAAWI,G,OAAjDR,E,OACAW,EAAQ,2BAAIX,GAChB/J,KAAKQ,SAAS,CAACuJ,QAASW,I,iLAGXT,EAAME,EAAWI,G,8EACxBlJ,EAAU,CACZC,OAAQ,OACRC,QAAS,CACL,eAAgB,oDACpBH,KAAM,QAAUmJ,GAEN,KAATN,GAA6B,KAAdE,GAAsBF,IAASE,E,iCAC9BzI,MAAM,aAAcL,G,YAAjCM,E,QACKsE,G,iCACYtE,EAAKC,O,cAAlB7B,E,OACJ6C,QAAQC,IAAI9C,G,kBACL,mF,mCAGPkK,IAASE,E,0CACN,mK,WAEM,KAATF,GAA6B,KAAdE,E,0CACZ,kH,sIAIL,IAAD,OACL,OACI,kBAACjB,EAAA,EAAD,CAAMC,SAAUnJ,KAAKgK,UACjB,2BAAG,2BAAOZ,IAAK,SAACC,GAAD,OAAO,EAAKa,aAAeb,GAAGsB,YAAa,oHAC1D,2BAAG,2BAAOvB,IAAK,SAACC,GAAD,OAAO,EAAKe,kBAAoBf,GAAGsB,YAAa,qKAC/D,2BAAG,kBAACd,EAAA,EAAD,CAAQ9H,KAAK,UAAb,WACF/B,KAAKH,MAAMkK,a,GAjDH7J,cC0CV0K,E,YAzCX,WAAYhL,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTuG,aAAa,EACbY,YAAa,IAEjB,EAAKC,UAAY,EAAKA,UAAUV,KAAf,gBACjB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBAPJ,E,2EAWfvG,KAAKQ,SAAS,CAACwG,YAAa,O,6JAIxB/D,EAAOjD,KAAKsJ,cAAclB,MAC1BpC,EAAShG,KAAKyJ,eAAerB,MAC7BhB,EAAI,kBAAC,EAAD,CACJhB,YAAepG,KAAKH,MAAMuG,YAC1BI,YAAexG,KAAKwG,YACpBvD,KAAQA,EACR+C,OAAUA,I,SAERhG,KAAKQ,SAAS,CAACwG,YAAaI,I,qIAG7B,IAAD,OACJ,OAEI,kBAAC8B,EAAA,EAAD,KACI,2BAAG,2BAAOE,IAAK,SAACC,GAAD,OAAO,EAAKC,cAAgBD,GAAGsB,YAAa,2FAE3D,2BAAG,2BAAOvB,IAAK,SAAChC,GAAD,OAAO,EAAKqC,eAAiBrC,GAAGuD,YAAa,oHAE5D,2BAAG,kBAACd,EAAA,EAAD,CAAQ9H,KAAK,SAASwF,QAASvH,KAAKiH,WAApC,qDACFjH,KAAKH,MAAMmH,iB,GApCP9G,aCwMN2K,E,YA1LX,WAAYjL,GAAQ,IAAD,8BACf,4CAAMA,KASVkL,gBAAkB,SAAC3C,EAAD,OAAMlF,EAAN,EAAMA,KAAN,OAAiB,EAAKzC,SAAS,CAAEuK,WAAY9H,KAR3D,EAAKpD,MAAQ,CACTC,YAAa,EAAKF,MAAMG,KACxBiL,SAAU,GACVD,WAAY,GACZE,UAAW,IANA,E,6EAiBf,IAJA,IAAIlL,EAAOC,KAAKH,MAAMC,YAClBoL,EAAW,GACXC,EAAc,GAETtJ,EAAI,EAAGA,EAAI9B,EAAK+B,OAAQD,IACnB,IAANA,EACAqJ,EAASlJ,KACL,kBAAC,IAAD,CAASoJ,GAAI,IAAMrL,EAAK8B,GAAGwJ,OAAS,KAChC,kBAACC,EAAA,EAAKC,KAAN,CACItI,KAAMlD,EAAK8B,GAAG2J,OACd1K,OAAQd,KAAKH,MAAMkL,aAAehL,EAAK8B,GAAG2J,OAC1CjE,QAASvH,KAAK8K,oBAKA,MAArB/K,EAAK8B,GAAG4J,SACbP,EAASlJ,KACL,kBAAC,IAAD,CAASoJ,GAAI,IAAMrL,EAAK8B,GAAGwJ,OAAS,IAAMtL,EAAK8B,GAAG2J,QAC9C,kBAACF,EAAA,EAAKC,KAAN,CACItI,KAAMlD,EAAK8B,GAAG2J,OACd1K,OAAQd,KAAKH,MAAMkL,aAAehL,EAAK8B,GAAG2J,OAC1CjE,QAASvH,KAAK8K,oBAMvBjJ,IAAM9B,EAAK+B,OAAS,GAAK/B,EAAK8B,GAAG4J,WAAa1L,EAAK8B,EAAI,GAAG4J,SACzDN,EAAYnJ,KACR,kBAAC,IAAD,CAASoJ,GAAI,IAAMrL,EAAK8B,GAAGwJ,OAAS,IAAMtL,EAAK8B,GAAG2J,QAC9C,kBAAC9B,EAAA,EAAS6B,KAAV,KAAgBxL,EAAK8B,GAAG2J,WAKhCL,EAAYnJ,KACR,kBAAC,IAAD,CAASoJ,GAAI,IAAMrL,EAAK8B,GAAGwJ,OAAS,IAAMtL,EAAK8B,GAAG2J,QAC9C,kBAAC9B,EAAA,EAAS6B,KAAV,KAAgBxL,EAAK8B,GAAG2J,UAGhCN,EAASlJ,KACL,kBAAC0H,EAAA,EAAD,CAAUgC,MAAI,EAACtL,KAAQL,EAAK8B,GAAG8J,QAC3B,kBAACjC,EAAA,EAAS4B,KAAV,KACKH,KAIbA,EAAc,IAI1BnL,KAAKQ,SAAS,CAACwK,SAAUE,M,oCAOzB,IAHA,IAAInL,EAAOC,KAAKH,MAAMC,YAClBmL,EAAY,GAEPpJ,EAAI,EAAGA,EAAI9B,EAAK+B,OAAQD,IACpB,IAANA,GACwB,2BAAnB9B,EAAK8B,GAAG5B,QAAsC,WAC9C,IAAI2L,EAAU7L,EAAK8B,GACnBoJ,EAAUjJ,KAAK,kBAAC,IAAD,CAAO6J,OAAK,EAACtJ,KAAM,IAAMxC,EAAK8B,GAAGwJ,OAAS,IACnCS,OAAQ,SAAClM,GAAD,OAAW,kBAAC,EAAD,eAAQG,KAAM6L,GAAahM,QAHtB,GAK3B,8BAAnBG,EAAK8B,GAAG5B,QAAyC,WACjD,IAAI2L,EAAU7L,EAAK8B,GACnBoJ,EAAUjJ,KAAK,kBAAC,IAAD,CAAO6J,OAAK,EAACtJ,KAAM,IAAMxC,EAAK8B,GAAGwJ,OAAS,IACnCS,OAAQ,SAAClM,GAAD,OAAW,kBAAC,EAAD,eAAaG,KAAM6L,GAAahM,QAHxB,GAK9B,yCAAnBG,EAAK8B,GAAG5B,QAAoD,WAC5D,IAAI2L,EAAU7L,EAAK8B,GACnBoJ,EAAUjJ,KAAK,kBAAC,IAAD,CAAO6J,OAAK,EAACtJ,KAAM,IAAMxC,EAAK8B,GAAGwJ,OAAS,IACnCS,OAAQ,SAAClM,GAAD,OAAW,kBAAC,EAAD,eAAWG,KAAM6L,GAAahM,QAHX,GAKzC,0CAAnBG,EAAK8B,GAAG5B,QAAqD,WAC7D,IAAI2L,EAAU7L,EAAK8B,GACnBoJ,EAAUjJ,KAAK,kBAAC,IAAD,CAAO6J,OAAK,EAACtJ,KAAM,IAAMxC,EAAK8B,GAAGwJ,OAAS,IACnCS,OAAQ,SAAClM,GAAD,OAAW,kBAAC,EAAD,eAAaG,KAAM6L,GAAahM,QAHZ,GAK1C,yCAAnBG,EAAK8B,GAAG5B,QAAoD,WAC5D,IAAI2L,EAAU7L,EAAK8B,GACnBoJ,EAAUjJ,KAAK,kBAAC,IAAD,CAAO6J,OAAK,EAACtJ,KAAM,IAAMxC,EAAK8B,GAAGwJ,OAAS,IACnCS,OAAQ,SAAClM,GAAD,OAAW,kBAAC,EAAD,eAAaG,KAAM6L,GAAahM,QAHb,GAKzC,uCAAnBG,EAAK8B,GAAG5B,QAAkD,WAC1D,IAAI2L,EAAU7L,EAAK8B,GACnBoJ,EAAUjJ,KAAK,kBAAC,IAAD,CAAO6J,OAAK,EAACtJ,KAAM,IAAMxC,EAAK8B,GAAGwJ,OAAS,IACnCS,OAAQ,SAAClM,GAAD,OAAW,kBAAC,EAAD,eAAaG,KAAM6L,GAAahM,QAHf,GAKvC,iCAAnBG,EAAK8B,GAAG5B,QAA4C,WACpD,IAAI2L,EAAU7L,EAAK8B,GACnBoJ,EAAUjJ,KAAK,kBAAC,IAAD,CAAO6J,OAAK,EAACtJ,KAAM,IAAMxC,EAAK8B,GAAGwJ,OAAS,IACnCS,OAAQ,SAAClM,GAAD,OAAW,kBAAC,EAAD,eAAeG,KAAM6L,GAAahM,QAHvB,GAKjC,0BAAnBG,EAAK8B,GAAG5B,QAAqC,WAC7C,IAAI2L,EAAU7L,EAAK8B,GACnBoJ,EAAUjJ,KAAK,kBAAC,IAAD,CAAO6J,OAAK,EAACtJ,KAAM,IAAMxC,EAAK8B,GAAGwJ,OAAS,IACnCS,OAAQ,SAAClM,GAAD,OAAW,kBAAC,EAAD,eAAYG,KAAM6L,GAAahM,QAH3B,KAO1B,2BAAnBG,EAAK8B,GAAG5B,QAAsC,WAC9C,IAAI2L,EAAU7L,EAAK8B,GACnBoJ,EAAUjJ,KAAK,kBAAC,IAAD,CAAO6J,OAAK,EAACtJ,KAAM,IAAMxC,EAAK8B,GAAGwJ,OAAS,IAAMtL,EAAK8B,GAAG2J,OACjDM,OAAQ,SAAClM,GAAD,OAAW,kBAAC,EAAD,eAAQG,KAAM6L,GAAahM,QAHtB,GAK3B,8BAAnBG,EAAK8B,GAAG5B,QAAyC,WACjD,IAAI2L,EAAU7L,EAAK8B,GACnBoJ,EAAUjJ,KAAK,kBAAC,IAAD,CAAO6J,OAAK,EAACtJ,KAAM,IAAMxC,EAAK8B,GAAGwJ,OAAS,IAAMtL,EAAK8B,GAAG2J,OACjDM,OAAQ,SAAClM,GAAD,OAAW,kBAAC,EAAD,eAAaG,KAAM6L,GAAahM,QAHxB,GAK9B,yCAAnBG,EAAK8B,GAAG5B,QAAoD,WAC5D,IAAI2L,EAAU7L,EAAK8B,GACnBoJ,EAAUjJ,KAAK,kBAAC,IAAD,CAAO6J,OAAK,EAACtJ,KAAM,IAAMxC,EAAK8B,GAAGwJ,OAAS,IAAMtL,EAAK8B,GAAG2J,OACjDM,OAAQ,SAAClM,GAAD,OAAW,kBAAC,EAAD,eAAWG,KAAM6L,GAAahM,QAHX,GAKzC,0CAAnBG,EAAK8B,GAAG5B,QAAqD,WAC7D,IAAI2L,EAAU7L,EAAK8B,GACnBoJ,EAAUjJ,KAAK,kBAAC,IAAD,CAAO6J,OAAK,EAACtJ,KAAM,IAAMxC,EAAK8B,GAAGwJ,OAAS,IAAMtL,EAAK8B,GAAG2J,OACjDM,OAAQ,SAAClM,GAAD,OAAW,kBAAC,EAAD,eAAaG,KAAM6L,GAAahM,QAHZ,GAK1C,yCAAnBG,EAAK8B,GAAG5B,QAAoD,WAC5D,IAAI2L,EAAU7L,EAAK8B,GACnBoJ,EAAUjJ,KAAK,kBAAC,IAAD,CAAO6J,OAAK,EAACtJ,KAAM,IAAMxC,EAAK8B,GAAGwJ,OAAS,IAAMtL,EAAK8B,GAAG2J,OACjDM,OAAQ,SAAClM,GAAD,OAAW,kBAAC,EAAD,eAAaG,KAAM6L,GAAahM,QAHb,GAKzC,uCAAnBG,EAAK8B,GAAG5B,QAAkD,WAC1D,IAAI2L,EAAU7L,EAAK8B,GACnBoJ,EAAUjJ,KAAK,kBAAC,IAAD,CAAO6J,OAAK,EAACtJ,KAAM,IAAMxC,EAAK8B,GAAGwJ,OAAS,IAAMtL,EAAK8B,GAAG2J,OACjDM,OAAQ,SAAClM,GAAD,OAAW,kBAAC,EAAD,eAAaG,KAAM6L,GAAahM,QAHf,GAKvC,iCAAnBG,EAAK8B,GAAG5B,QAA4C,WACpD,IAAI2L,EAAU7L,EAAK8B,GACnBoJ,EAAUjJ,KAAK,kBAAC,IAAD,CAAO6J,OAAK,EAACtJ,KAAM,IAAMxC,EAAK8B,GAAGwJ,OAAS,IAAMtL,EAAK8B,GAAG2J,OACjDM,OAAQ,SAAClM,GAAD,OAAW,kBAAC,EAAD,eAAeG,KAAM6L,GAAahM,QAHvB,GAKjC,0BAAnBG,EAAK8B,GAAG5B,QAAqC,WAC7C,IAAI2L,EAAU7L,EAAK8B,GACnBoJ,EAAUjJ,KAAK,kBAAC,IAAD,CAAO6J,OAAK,EAACtJ,KAAM,IAAMxC,EAAK8B,GAAGwJ,OAAS,IAAMtL,EAAK8B,GAAG2J,OACjDM,OAAQ,SAAClM,GAAD,OAAW,kBAAC,EAAD,eAAYG,KAAM6L,GAAahM,QAH3B,IAOzDI,KAAKQ,SAAS,CAACyK,UAAWA,M,0CAI1BjL,KAAK+L,gBACL/L,KAAKgM,gB,+BAIL,OACI,kBAAC,IAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,CAAaxL,MAAO,GAChB,kBAAC4K,EAAA,EAAD,CAAMa,OAAK,EAACC,UAAQ,EAACC,SAAO,GACvBrM,KAAKH,MAAMmL,WAGpB,kBAACiB,EAAA,EAAKC,OAAN,CAAaI,WAAS,EAAC5L,MAAO,IAC1B,kBAAC6L,EAAA,EAAD,CAASC,MAAO,CAACC,SAAU,OAAQC,UAAW,MACzC1M,KAAKH,MAAMoL,kB,GAlLd/K,a,4CClB1B,kCAAAmJ,EAAA,4DACc,QAEJhI,EAAU,CACZC,OAAQ,MACRC,QAAS,CACL,OAAU,qBANtB,SASyBG,MARX,QAQsBL,GATpC,YASQsL,EATR,QAWiB1G,GAXjB,iCAYyB0G,EAAS/K,OAZlC,cAYYA,EAZZ,iBAaqBA,EAbrB,QAaQ+B,EAbR,wCAeWA,GAfX,6C,sBAkBe1B,M,2CCgGA2K,E,YA7GX,WAAYhN,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACToB,QAAS,GACT4L,WAAY,IAEhB,EAAKC,SAAW,EAAKA,SAASvG,KAAd,gBAChB,EAAKwG,OAAS,EAAKA,OAAOxG,KAAZ,gBAPC,E,+GAUJ4B,G,0FACPtF,EAAM7C,KAAKgN,cAAc5E,MACzB6B,EAAOjK,KAAKkK,aAAa9B,MACzBiC,EAAOC,EAAQ,KACf2C,EAAW5C,EAAKJ,GAAMO,cACtBpJ,EAAO,CACP,IAAOyB,EACP,KAAQoK,GAGN5L,EAAU,CACZC,OAAQ,OACRC,QAAS,CACL,eAAgB,kCAChB,OAAU,oBAEdH,KAAMI,KAAKC,UAAUL,IAEb,KAARyB,GAAuB,KAAToH,E,iCACGvI,MAAM,QAASL,G,YAA5BM,E,QACKsE,G,kCACYtE,EAAKC,O,QAAlBA,E,OAES,WADTsL,EAAOtL,EAAKsL,MAEZlN,KAAKQ,SAAS,CAACqM,WAAY,oMAEb,UAATK,IACLlN,KAAKQ,SAAS,CAACqM,WAAY,KAC3B7M,KAAKQ,SAAS,CAACS,QAAS,kBAAC4I,EAAA,EAAD,CAAQ/I,OAAQd,KAAKJ,MAAMuN,aAAc5F,QAASvH,KAAK+M,QAAvD,qC,yQAO9B1L,EAAU,CACZC,OAAQ,MACRC,QAAS,CACL,OAAU,qB,SAGDG,MAAM,SAAUL,G,YAA7BM,E,QACKsE,G,iCACYtE,EAAKC,O,OAAlBA,E,OAGS,UAFFA,EAAKsL,MAIZlN,KAAKQ,SAAS,CAACS,QACP,6BACI,2BAAG,2BAAOmI,IAAK,SAACC,GAAD,OAAO,EAAK2D,cAAgB3D,GAAGsB,YAAa,+EAC3D,2BAAG,2BAAOvB,IAAK,SAAChC,GAAD,OAAO,EAAK8C,aAAe9C,GAAGuD,YAAa,qFAC1D,2BAAG,kBAACd,EAAA,EAAD,CAAQ/I,OAAQd,KAAKJ,MAAMuN,aAAcpL,KAAK,UAA9C,c,qRAQjBV,EAAU,CACZC,OAAQ,MACRC,QAAS,CACL,OAAU,qB,SAGDG,MAAM,aAAcL,G,YAAjCM,E,QACKsE,G,iCACYtE,EAAKC,O,OAAlBA,E,OAES,WADTsL,EAAOtL,EAAKsL,MAEZlN,KAAKQ,SAAS,CAACS,QACP,6BACI,2BAAG,2BAAOmI,IAAK,SAACC,GAAD,OAAO,EAAK2D,cAAgB3D,GAAGsB,YAAa,+EAC3D,2BAAG,2BAAOvB,IAAK,SAAChC,GAAD,OAAO,EAAK8C,aAAe9C,GAAGuD,YAAa,qFAC1D,2BAAG,kBAACd,EAAA,EAAD,CAAQ9H,KAAK,UAAb,cAGD,UAATmL,GACLlN,KAAKQ,SAAS,CAACS,QAAS,kBAAC4I,EAAA,EAAD,CAAQtC,QAASvH,KAAK+M,QAAtB,oC,sIAMhC,OACI,kBAACjK,EAAA,EAAD,CAAOC,QAAS,kBAAC8G,EAAA,EAAD,CAAQhD,KAAK,WAAb,4BAAsCF,WAAS,GAC3D,kBAACC,EAAA,EAAD,CAAQC,KAAK,UAAU5F,QAAQ,6BAC/B,kBAAC6B,EAAA,EAAMM,QAAP,KACI,kBAAC8F,EAAA,EAAD,CAAMC,SAAUnJ,KAAK8M,UAChB9M,KAAKH,MAAMoB,SAEhB,2BAAIjB,KAAKH,MAAMgN,kB,GAvGZ3M,aC6HRkN,E,YAnHX,WAAYxN,GAAQ,IAAD,8BACf,4CAAMA,KA+FVkL,gBAAkB,SAAC3C,EAAD,OAAMlF,EAAN,EAAMA,KAAN,OAAiB,EAAKzC,SAAS,CAAEuK,WAAY9H,KA9F3D,EAAKpD,MAAQ,CACTwN,YAAa,SACbC,iBAAkB,SAClBC,UAAW,GACXC,WAAY,GACZN,KAAM,SAEV,EAAKO,WAAa,EAAKA,WAAWlH,KAAhB,gBATH,E,uMAaEtE,I,OAAblC,E,OACJ6C,QAAQC,IAAI9C,GACZC,KAAKQ,SAAS,CAAC+M,UAAWxN,I,sIAI1B,IAAIA,EAAOC,KAAKH,MAAM0N,UAClBG,EAAO,GAEJ3C,EAAc/K,KAAKH,MAAnBkL,WAEP/K,KAAKQ,SAAS,CAACgN,WACP,kBAAC,IAAD,CAASpC,GAAI,KACT,kBAACxE,EAAA,EAAD,CAAQ+G,GAAG,KAAKC,OAAK,GAArB,wDAKZ,IAAK,IAAI/L,EAAI,EAAGA,EAAI9B,EAAK+B,OAAQD,IACpB,IAANA,GAAW9B,EAAK8B,GAAGwJ,SAAWtL,EAAK8B,EAAI,GAAGwJ,QAC5CqC,EAAK1L,KACF,kBAAC,IAAD,CAASoJ,GAAI,IAAMrL,EAAK8B,GAAGwJ,QACvB,kBAACC,EAAA,EAAKC,KAAN,CACItI,KAAMlD,EAAK8B,GAAGwJ,OACdvK,OAAQiK,IAAehL,EAAK8B,GAAGwJ,OAC/B9D,QAASvH,KAAK8K,iBAEb/K,EAAK8B,GAAGwJ,UAIzBqC,EAAK1L,KACD,kBAACsJ,EAAA,EAAKC,KAAN,CAAWsC,SAAS,SACZ,kBAAC,EAAD,CAAUV,WAAcnN,KAAKyN,eAGzCzN,KAAKQ,SAAS,CAAC6M,YAAaK,M,mCAGnB,IAAD,OACR1N,KAAKQ,SAAS,CAAC0M,KAAM,UACrBlN,KAAKiC,UAAU6L,MAAK,SAAAC,GAAC,OAAI,EAAKC,wB,yCAI9B,IAAKjO,EAAOC,KAAKH,MAAM0N,UACnBU,EAAc,GACdC,EAAkB,GAClBC,EAAa,CAACjM,SAAU,MAC5B+L,EAAYjM,KAAK,kBAAC,IAAD,CAAO6J,OAAK,EAACtJ,KAAM,IAAMuJ,OAAQ,SAAClM,GAAD,OAC9C,kBAACqM,EAAA,EAAKC,OAAN,CAAaI,WAAS,EAAC5L,MAAO,IAC1B,kBAAC6L,EAAA,EAAD,KACI,kBAAC,EAAD,eAAWxM,KAAMoO,GAAgBvO,UAI7C,IAAK,IAAIiC,EAAI,EAAGA,EAAI9B,EAAK+B,OAAQD,IAEzBA,IAAM9B,EAAK+B,OAAS,GAAK/B,EAAK8B,GAAGwJ,SAAWtL,EAAK8B,EAAI,GAAGwJ,QAAWxJ,IAAM9B,EAAK+B,OAAS,EAIrF,WACFoM,EAAgBlM,KAAKjC,EAAK8B,IAC1B,IAAI+J,EAAUsC,EACdD,EAAYjM,KAAK,kBAAC,IAAD,CAAOO,KAAM,IAAMxC,EAAK8B,GAAGwJ,OAASS,OAAQ,SAAClM,GAAD,OAAS,kBAAC,EAAD,eAAaG,KAAM6L,GAAahM,QACtGsO,EAAkB,GAJhB,GAHFA,EAAgBlM,KAAKjC,EAAK8B,IAYlC7B,KAAKQ,SAAS,CAAC8M,iBAAkBW,M,yCAIjCjO,KAAKoO,UACLpO,KAAKqO,qB,0CAGY,IAAD,OAChBrO,KAAKiC,UAAU6L,MAAK,SAAAC,GAAC,OAAI,EAAKC,wB,+BAQ9B,OACI,kBAAC,IAAD,KACKhO,KAAKH,MAAM2N,WACZ,kBAAClC,EAAA,EAAD,KACKtL,KAAKH,MAAMwN,aAEhB,yBAAKnM,GAAG,WACHlB,KAAKH,MAAMyN,uB,GA7GTpN,aCTvBoO,IAASxC,OACL,kBAAC,EAAD,MACAyC,SAASC,eAAe,W","file":"static/js/main.bd4a69b3.chunk.js","sourcesContent":["import React,{Component} from \"react\";\r\n\r\nclass InetCatalog extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n        };\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.dataFromOut.module}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InetCatalog;","import React, {Component} from \"react\";\r\n\r\nclass Text extends Component{\r\n    render() {\r\n        return(\r\n            <p>{this.props.text}</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Text;","import React, {Component} from \"react\";\r\n\r\nclass PrintImg extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.printImg,\r\n            printImg: \"\"\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let printImg = \"data:image/jpg;base64,\" + this.state.dataFromOut.img;\r\n\r\n        this.setState({printImg: printImg});\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <p>\r\n                <img src={this.state.printImg} width={700}/>\r\n            </p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PrintImg;","import React, {Component} from \"react\";\r\nimport Text from \"./Text\";\r\nimport PrintImg from \"./PrintImg\";\r\n\r\nimport { Dimmer, Loader} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass InfoBlock extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n            data: \"...\",\r\n            printData:\r\n                <Dimmer active inverted>\r\n                    <Loader inverted content='Loading' />\r\n                </Dimmer>\r\n        };\r\n    }\r\n\r\n    async getData(id) {\r\n        let out = [];\r\n        let body = {\r\n            \"id\": id\r\n        };\r\n        const options = {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        };\r\n\r\n        let resp = await fetch(\"infoBlock\", options);\r\n        let data = await resp.json();\r\n\r\n        await this.setState({data: data});\r\n        for (let i = 0; i < data.length; i++){\r\n            if (data[i].type === \"1\") {\r\n                out.push(<Text text={data[i].data}/>);\r\n            }\r\n            else if(data[i].type === \"2\"){\r\n                out.push(<PrintImg printImg={data[i]}/>);\r\n\r\n            }\r\n        }\r\n        this.setState({printData: out});\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(this.state.dataFromOut.idModule);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.printData}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfoBlock;","import React,{Component} from \"react\";\r\n\r\nclass ProducerNom extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n        };\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.dataFromOut.module}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProducerNom;","import React,{Component} from \"react\";\r\n\r\nclass FileBrowser extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n        };\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.dataFromOut.module}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileBrowser;","import React,{Component} from \"react\";\r\n\r\nclass NewInfBlock extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n        };\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.dataFromOut.module}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewInfBlock;","import React,{Component} from \"react\";\r\nimport {Modal, Image, Icon} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass StatusImage extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.path,\r\n            finalUrl: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let imagePath = \"statusImage?path=\" + this.state.dataFromOut;\r\n        let encodePath = encodeURI(imagePath);\r\n        this.setState({\r\n            finalUrl: encodePath\r\n        });\r\n        console.log(imagePath);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal trigger={<Icon name=\"picture\" size='huge' />} basic>\r\n                <Modal.Content image>\r\n                    <Image centered size='huge' src={this.state.finalUrl} />\r\n                </Modal.Content>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StatusImage;","import React,{Component} from \"react\";\r\nimport {Icon} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport StatusImage from \"./StatusImage\";\r\n\r\nclass ListImages extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.imgPath,\r\n            imagesList: []\r\n        };\r\n    }\r\n\r\n    createImagesList() {\r\n        let list = [];\r\n        let pathList = this.state.dataFromOut.split(\"$\");\r\n        for(let i = 0; i < pathList.length - 1; i++){\r\n            list.push(\r\n                <StatusImage path={pathList[i]}/>\r\n            )\r\n        }\r\n        this.setState({\r\n            imagesList: list\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createImagesList()\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.imagesList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListImages;","import React,{Component} from \"react\";\r\nimport {Table} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nimport ListImages from \"../Status/ListImages\";\r\n\r\nclass StatusText extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            operationsTable: \"\",\r\n            statusElement: \"\",\r\n            testState: \"123\"\r\n        };\r\n    }\r\n\r\n    createOperations(list){\r\n        let cell = [];\r\n        let operations = list.operation;\r\n        console.log((operations !== \"\") + \" работы\");\r\n        if ((operations !== undefined) && (operations !== \"\")){\r\n            let listOfOperations = operations.split(\"$\");\r\n            let num = listOfOperations.length - 1;\r\n            cell.push(\r\n                <Table.Row>\r\n                    <Table.Cell rowSpan={num}>Выполненые работы:</Table.Cell>\r\n                    <Table.Cell>{listOfOperations[0]}</Table.Cell>\r\n                </Table.Row>\r\n            );\r\n            for (let i = 1; i < num; i++){\r\n                cell.push(\r\n                    <Table.Row>\r\n                        <Table.Cell>{listOfOperations[i]}</Table.Cell>\r\n                    </Table.Row>\r\n                )\r\n            }\r\n            this.setState({\r\n                operationsTable: cell\r\n            });\r\n        }\r\n    }\r\n\r\n    createTable(list){\r\n        let printVar = [];\r\n        let repairBeginDate =\r\n            <Table.Row>\r\n                <Table.Cell>Дата начала ремонта</Table.Cell>\r\n                <Table.Cell>{list.repairBeginDate}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(repairBeginDate);\r\n\r\n        let repairEndDate =\r\n            <Table.Row>\r\n                <Table.Cell>Дата завершения ремонта</Table.Cell>\r\n                <Table.Cell>{list.repairEndDate}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(repairEndDate);\r\n\r\n        let state =\r\n            <Table.Row>\r\n                <Table.Cell>Состояние ремонта</Table.Cell>\r\n                <Table.Cell>{list.state}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(state);\r\n\r\n        let fullName =\r\n            <Table.Row>\r\n                <Table.Cell>ФИО</Table.Cell>\r\n                <Table.Cell>{list.fullName}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(fullName);\r\n\r\n        let modelName =\r\n            <Table.Row>\r\n                <Table.Cell>Модель</Table.Cell>\r\n                <Table.Cell>{list.modelName}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(modelName);\r\n\r\n        let IMEI =\r\n            <Table.Row>\r\n                <Table.Cell>IMEI</Table.Cell>\r\n                <Table.Cell>{list.IMEI}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(IMEI);\r\n\r\n        let equipment =\r\n            <Table.Row>\r\n                <Table.Cell>Комплектация</Table.Cell>\r\n                <Table.Cell>{list.equipment}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(equipment);\r\n\r\n        let issue =\r\n            <Table.Row>\r\n                <Table.Cell>Неисправность</Table.Cell>\r\n                <Table.Cell>{list.issue}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(issue);\r\n\r\n        let cost =\r\n            <Table.Row>\r\n                <Table.Cell>Стоимость ремонта</Table.Cell>\r\n                <Table.Cell>{list.cost}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(cost);\r\n\r\n        let comment =\r\n            <Table.Row>\r\n                <Table.Cell>Комментарий</Table.Cell>\r\n                <Table.Cell>{list.comment}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(comment);\r\n\r\n        printVar.push(this.state.operationsTable);\r\n\r\n        let images =\r\n            <Table.Row>\r\n                <Table.Cell>Фотографии ремонта</Table.Cell>\r\n                <Table.Cell>\r\n                    <ListImages imgPath={list.images}/>\r\n                </Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(images);\r\n\r\n        this.setState({\r\n            statusElement: printVar\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.createOperations(this.props.text);\r\n        await this.createTable(this.props.text);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table celled selectable>\r\n                <Table.Body>\r\n                        {this.state.statusElement}\r\n                </Table.Body>\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatusText;","import React,{Component} from \"react\";\r\nimport StatusText from \"./StatusText\";\r\nimport {Dimmer, Loader} from \"semantic-ui-react\";\r\n\r\nclass GetStatus extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            printStatus: \"\"\r\n        };\r\n    }\r\n\r\n    async getStatusFromServer(){\r\n        let surname = this.props.name;\r\n        let number = this.props.number;\r\n        let body = {\r\n            \"surname\": surname,\r\n            \"number\": number\r\n        };\r\n        console.log(JSON.stringify(body))\r\n        const options = {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        };\r\n        if ((surname !== \"\" && number !== \"\") || (surname !== undefined && number !== undefined)){\r\n            this.setState({printStatus:\r\n                    <Dimmer active inverted>\r\n                        <Loader inverted content='Loading' />\r\n                    </Dimmer>\r\n            });\r\n            let resp = await fetch(\"status\", options);\r\n            if (resp.ok) {\r\n                let json = await resp.json();\r\n                console.log(json);\r\n                if (json === null){\r\n                    this.setState({printStatus: \"Неправильно введена фамилия или номер заявки\"});\r\n                }\r\n                else this.setState({printStatus: <StatusText text = {json}/>});\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getStatusFromServer();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.printStatus}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GetStatus;","import React,{Component} from \"react\";\r\nimport {Button, Header, Form, Modal, Dimmer, Loader} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport GetStatus from \"./GetStatus\";\r\n\r\nclass ModalPart extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            statusModal: this.props.statusModal,\r\n            statusContent: \"\"\r\n        };\r\n        this.changeState = this.changeState.bind(this);\r\n    }\r\n\r\n    async changeState(){\r\n        await this.setState({statusModal: false});\r\n        await this.props.closeModule();\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.setState({statusContent:\r\n                <GetStatus\r\n                    name = {this.props.name}\r\n                    number = {this.props.number}\r\n                />\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Modal\r\n                    open={this.state.statusModal}\r\n                    onClose={this.changeState}\r\n                    closeIcon\r\n                >\r\n                    <Header icon='archive' content='Состояние заявки'/>\r\n                    <Modal.Content>\r\n                        {this.state.statusContent}\r\n                    </Modal.Content>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalPart;","import React, {Component} from \"react\";\r\nimport { Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport ModalPart from \"../StatusApp/ModalPart\";\r\n\r\nclass JournalTable extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n            dataForPrint: \"\",\r\n            statusModal: true,\r\n            changedComp: \"\"\r\n        };\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModule = this.closeModule.bind(this);\r\n    }\r\n\r\n    closeModule(){\r\n        this.setState({changedComp: \"\"})\r\n    }\r\n\r\n    async openModal(surName, repairNumber){\r\n        let name = surName;\r\n        let number = repairNumber;\r\n        let b = <ModalPart\r\n            statusModal = {this.state.statusModal}\r\n            closeModule = {this.closeModule}\r\n            name = {name}\r\n            number = {number}\r\n        />;\r\n        await this.setState({changedComp: b});\r\n    }\r\n\r\n    createTable(){\r\n\r\n        let printRow = [];\r\n        let list = this.state.dataFromOut.list;\r\n        console.log(list);\r\n        console.log(list.length);\r\n        if (list.length !== 0) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                let printElement =\r\n                    <Table.Row onClick = {this.openModal.bind(this, list[i].fullName, list[i].number)}>\r\n                        <Table.Cell>{list[i].ready}</Table.Cell>\r\n                        <Table.Cell>{list[i].state}</Table.Cell>\r\n                        <Table.Cell> </Table.Cell>\r\n                        <Table.Cell>{list[i].number}</Table.Cell>\r\n                        <Table.Cell>{list[i].repairBeginDate}</Table.Cell>\r\n                        <Table.Cell>{list[i].location}</Table.Cell>\r\n                        <Table.Cell>{list[i].modelName}</Table.Cell>\r\n                        <Table.Cell>{list[i].SN}</Table.Cell>\r\n                        <Table.Cell>{list[i].IMEI}</Table.Cell>\r\n                        <Table.Cell>{list[i].cost}</Table.Cell>\r\n                        <Table.Cell>{list[i].fullName}</Table.Cell>\r\n                    </Table.Row>;\r\n                printRow.push(printElement);\r\n            }\r\n            this.setState({dataForPrint: printRow})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createTable();\r\n        console.log(this.state.dataFromOut)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Table celled selectable>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Готово к выдаче</Table.HeaderCell>\r\n                            <Table.HeaderCell>Статус</Table.HeaderCell>\r\n                            <Table.HeaderCell>Тип ремонта</Table.HeaderCell>\r\n                            <Table.HeaderCell>Номер заявки</Table.HeaderCell>\r\n                            <Table.HeaderCell>Дата начала ремонта</Table.HeaderCell>\r\n                            <Table.HeaderCell>Текущее местоположение</Table.HeaderCell>\r\n                            <Table.HeaderCell>Модель</Table.HeaderCell>\r\n                            <Table.HeaderCell>Серийный номер</Table.HeaderCell>\r\n                            <Table.HeaderCell>IMEI</Table.HeaderCell>\r\n                            <Table.HeaderCell>Сумма</Table.HeaderCell>\r\n                            <Table.HeaderCell>Клиент</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {this.state.dataForPrint}\r\n                    </Table.Body>\r\n                </Table>\r\n                {this.state.changedComp}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JournalTable;","import React, {Component} from \"react\";\r\nimport ModernDatepicker from 'react-modern-datepicker';\r\nimport {Dropdown, Form, Button, Loader, Dimmer} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"./StatusJournal.css\"\r\nimport JournalTable from \"./JournalTable\";\r\n\r\nclass StatusJournal extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date(),\r\n            firstDate: new Date(),\r\n            option: \"\",\r\n            array: \"\",\r\n            dataForOut: \"\",\r\n            printJournal: \"\"\r\n        };\r\n        this.getOptions = this.getOptions.bind(this);\r\n    }\r\n\r\n    setDate(){\r\n        let date = new Date();\r\n        date.setMonth(date.getMonth() - 2);\r\n        this.setState({firstDate: date});\r\n    }\r\n\r\n    async getOptions(){\r\n        let firstDate = this.state.date.getTime();\r\n        let secondDate = this.state.firstDate.getTime();\r\n        let option;\r\n        if (this._thirdElement.props.value === undefined){\r\n            option = this._thirdElement.props.defaultValue;\r\n        }\r\n        else {\r\n            option = this._thirdElement.props.value;\r\n        }\r\n        await this.setState({array: [firstDate, secondDate, option]});\r\n        await this.sendData();\r\n    }\r\n\r\n    async sendData(){\r\n        this.setState({printJournal:\r\n                <Dimmer active inverted>\r\n                    <Loader inverted content='Loading' />\r\n                </Dimmer>\r\n        });\r\n        const options = {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" },\r\n            body: \"firstDate=\" + this.state.array[0] + \"&secondDate=\" + this.state.array[1] + \"&option=\" + this.state.array[2]\r\n        };\r\n        let resp = await fetch(\"statusJournal\", options);\r\n        if (resp.ok) {\r\n            let data = await resp.json();\r\n            this.setState({dataForOut: data});\r\n            this.setState({printJournal: <JournalTable data={this.state.dataForOut}/>});\r\n            console.log(data)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setDate();\r\n    }\r\n\r\n    onChange = date => this.setState({ date: new Date(date.split(\"-\")[2], date.split(\"-\")[1] - 1, date.split(\"-\")[0])});\r\n    onChangeFirst = firstDate => this.setState({ firstDate: new Date(firstDate.split(\"-\")[2], firstDate.split(\"-\")[1] - 1, firstDate.split(\"-\")[0]) });\r\n    handleChange = (e, { value }) => this.setState({ value });\r\n\r\n    render() {\r\n        const options = [\r\n            { key: 1, text: 'Все за период', value: 1 },\r\n            { key: 2, text: 'Готово к выдаче', value: 2 },\r\n            { key: 3, text: 'Не готово к выдаче (ремонтируется)', value: 3 },\r\n        ];\r\n        const { value } = this.state;\r\n        return(\r\n            <Form onSubmit={this.getOptions}>\r\n                Журнал заявок с\r\n                <p><ModernDatepicker\r\n                    ref={(a) => this._firstElement = a}\r\n                    onChange={this.onChangeFirst}\r\n                    date={this.state.firstDate}\r\n                    format={'DD-MM-YYYY'}\r\n                    className=\"color\"\r\n                /></p>\r\n                <p>по</p>\r\n                <p><ModernDatepicker\r\n                    ref={(a) => this._secondElement = a}\r\n                    onChange={this.onChange}\r\n                    date={this.state.date}\r\n                    format={'DD-MM-YYYY'}\r\n                    className=\"color\"\r\n                /></p>\r\n                <p>\r\n                    <Dropdown\r\n                        ref={(a) => this._thirdElement = a}\r\n                        selection\r\n                        options={options}\r\n                        defaultValue={1}\r\n                        onChange={this.handleChange}\r\n                        value={value}\r\n                    />\r\n                    <Button type=\"submit\">Открыть</Button>\r\n                </p>\r\n                <p>{this.state.printJournal}</p>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StatusJournal;","import React,{Component} from \"react\";\r\nimport {Button, Form} from \"semantic-ui-react\";\r\nimport 'js-sha1';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass ChangePass extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            message: \"\"\r\n        };\r\n        this.sendPass = this.sendPass.bind(this);\r\n    }\r\n\r\n    async sendPass(e){\r\n        let pass = this._passElement.value;\r\n        let checkPass = this._passCheckElement.value;\r\n        let sha1 = require('sha1');\r\n        let encodePass = sha1(pass).toUpperCase();\r\n\r\n        let message = await this.sendChange(pass, checkPass, encodePass);\r\n        let print = <p>{message}</p>;\r\n        this.setState({message: print})\r\n    }\r\n\r\n    async sendChange(pass, checkPass, encodePass) {\r\n        const options = {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" },\r\n            body: \"pass=\" + encodePass\r\n        };\r\n        if ((pass !== \"\" && checkPass !== \"\") && (pass === checkPass)){\r\n            let resp = await fetch(\"changePass\", options);\r\n            if (resp.ok) {\r\n                let data = await resp.json();\r\n                console.log(data)\r\n                return \"Пароль изменен\";\r\n            }\r\n        }\r\n        else if(pass !== checkPass){\r\n            return \"Введенные пароли не совпадают\";\r\n        }\r\n        else if(pass === \"\" && checkPass === \"\"){\r\n            return \"Введите новый пароль\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Form onSubmit={this.sendPass}>\r\n                <p><input ref={(a) => this._passElement = a} placeholder={\"Введите новый пароль\"}/></p>\r\n                <p><input ref={(a) => this._passCheckElement = a} placeholder={\"Повторно введите новый пароль\"}/></p>\r\n                <p><Button type=\"submit\">submit</Button></p>\r\n                {this.state.message}\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangePass;","import React, {Component} from \"react\";\r\nimport {Button, Header, Form, Modal, Dimmer, Loader} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport ModalPart from \"./ModalPart\";\r\n\r\nclass Status extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            statusModal: true,\r\n            changedComp: \"\"\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModule = this.closeModule.bind(this);\r\n    }\r\n\r\n    closeModule(){\r\n        this.setState({changedComp: \"\"})\r\n    }\r\n\r\n    async openModal(){\r\n        let name = this._firstElement.value;\r\n        let number = this._secondElement.value;\r\n        let b = <ModalPart\r\n            statusModal = {this.state.statusModal}\r\n            closeModule = {this.closeModule}\r\n            name = {name}\r\n            number = {number}\r\n        />;\r\n        await this.setState({changedComp: b});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n\r\n            <Form>\r\n                <p><input ref={(a) => this._firstElement = a} placeholder={\"Введите фамилию\"}/></p>\r\n\r\n                <p><input ref={(b) => this._secondElement = b} placeholder={\"Введите номер заявки\"}/></p>\r\n\r\n                <p><Button type=\"submit\" onClick={this.openModal}>Показать</Button></p>\r\n                {this.state.changedComp}\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Status;","import React,{Component} from \"react\";\r\nimport { Dropdown, Menu, Grid, Segment } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {\r\n    Route,\r\n    NavLink,\r\n    HashRouter\r\n} from \"react-router-dom\";\r\n\r\nimport InetCatalog from \"../Modules/InetCatalog\";\r\nimport InfoBlock from \"../Modules/InfoBlock/InfoBlock\";\r\nimport ProducerNom from \"../Modules/ProducerNom\";\r\nimport FileBrowser from \"../Modules/FileBrowser\";\r\nimport NewInfBlock from \"../Modules/NewInfBlock\";\r\nimport StatusJournal from \"../Modules/StatusJournal/StatusJournal\";\r\nimport ChangePass from \"../Modules/ChangePass/ChangePass\";\r\nimport Status from \"../Modules/StatusApp/Status\";\r\n\r\nclass MenuElement extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n            menuItem: \"\",\r\n            activeItem: \"\",\r\n            menuRoute: \"\"\r\n        };\r\n    }\r\n\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n    createSubMenu(){\r\n        let data = this.state.dataFromOut;\r\n        let menuList = [];\r\n        let subMenuList = [];\r\n\r\n        for (let i = 0; i < data.length; i++){\r\n            if (i === 0) {\r\n                menuList.push(\r\n                    <NavLink to={\"/\" + data[i].group1 + \"/\"}>\r\n                        <Menu.Item\r\n                            name={data[i].group3}\r\n                            active={this.state.activeItem === data[i].group3}\r\n                            onClick={this.handleItemClick}\r\n                        />\r\n                    </NavLink>\r\n                )\r\n            }\r\n            else if (data[i].idGroup2 === \"0\"){\r\n                menuList.push(\r\n                    <NavLink to={\"/\" + data[i].group1 + \"/\" + data[i].group3}>\r\n                        <Menu.Item\r\n                            name={data[i].group3}\r\n                            active={this.state.activeItem === data[i].group3}\r\n                            onClick={this.handleItemClick}\r\n                        />\r\n                    </NavLink>\r\n                )\r\n            }\r\n            else {\r\n                if(i !== data.length - 1 && data[i].idGroup2 === data[i + 1].idGroup2){\r\n                    subMenuList.push(\r\n                        <NavLink to={\"/\" + data[i].group1 + \"/\" + data[i].group3}>\r\n                            <Dropdown.Item>{data[i].group3}</Dropdown.Item>\r\n                        </NavLink>\r\n                    )\r\n                }\r\n                else {\r\n                    subMenuList.push(\r\n                        <NavLink to={\"/\" + data[i].group1 + \"/\" + data[i].group3}>\r\n                            <Dropdown.Item>{data[i].group3}</Dropdown.Item>\r\n                        </NavLink>\r\n                    );\r\n                    menuList.push(\r\n                        <Dropdown item text = {data[i].group2}>\r\n                            <Dropdown.Menu>\r\n                                {subMenuList}\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    );\r\n                    subMenuList = [];\r\n                }\r\n            }\r\n        }\r\n        this.setState({menuItem: menuList});\r\n    }\r\n\r\n    createRoute(){\r\n        let data = this.state.dataFromOut;\r\n        let menuRoute = [];\r\n\r\n        for (let i = 0; i < data.length; i++){\r\n            if(i === 0) {\r\n                if (data[i].module === \"~/REM/REM_Zayavka.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <Status data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/Spr/SprInetCatalog.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <InetCatalog data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/ART/ART_FormaElementaInfBlock.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <InfoBlock data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/Spr/ProducerNom/SprProducerNom.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <ProducerNom data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/KasFileBrowser/KasFileBrowser.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <FileBrowser data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/HLP/HLP_FormaSpiskaInfBlock.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <NewInfBlock data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/REM/REM_GurZForDialer.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <StatusJournal data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/ChangePassword.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <ChangePass data={outData} {...props}/>}/>);\r\n                }\r\n            }\r\n            else {\r\n                if (data[i].module === \"~/REM/REM_Zayavka.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <Status data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/Spr/SprInetCatalog.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <InetCatalog data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/ART/ART_FormaElementaInfBlock.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <InfoBlock data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/Spr/ProducerNom/SprProducerNom.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <ProducerNom data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/KasFileBrowser/KasFileBrowser.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <FileBrowser data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/HLP/HLP_FormaSpiskaInfBlock.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <NewInfBlock data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/REM/REM_GurZForDialer.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <StatusJournal data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/ChangePassword.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <ChangePass data={outData} {...props}/>}/>);\r\n                }\r\n            }\r\n        }\r\n        this.setState({menuRoute: menuRoute});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createSubMenu();\r\n        this.createRoute();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <HashRouter>\r\n                <Grid>\r\n                    <Grid.Column width={4}>\r\n                        <Menu fluid vertical tabular>\r\n                            {this.state.menuItem}\r\n                        </Menu>\r\n                    </Grid.Column>\r\n                    <Grid.Column stretched width={12}>\r\n                        <Segment style={{overflow: 'auto', minHeight: 490}}>\r\n                            {this.state.menuRoute}\r\n                        </Segment>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MenuElement;","async function getData() {\r\n    let url = \"/menu\";\r\n    let list;\r\n    const options = {\r\n        method: 'get',\r\n        headers: {\r\n            \"Accept\": \"application/json\"\r\n        }\r\n    };\r\n    let response = await fetch(url, options);\r\n\r\n    if (response.ok) {\r\n        let json = await response.json();\r\n        list = await json;\r\n    }\r\n    return list;\r\n}\r\n\r\nexport default getData;","import React,{Component} from \"react\";\r\nimport { Button, Header, Modal, Form } from 'semantic-ui-react'\r\nimport 'js-sha1';\r\n\r\nclass LoginApp extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            content: \"\",\r\n            subContent: \"\"\r\n        };\r\n        this.getLogin = this.getLogin.bind(this);\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    async getLogin(e){\r\n        let log = this._loginElement.value;\r\n        let pass = this._passElement.value;\r\n        let sha1 = require('sha1');\r\n        let hashPass = sha1(pass).toUpperCase();\r\n        let body = {\r\n            \"log\": log,\r\n            \"pass\": hashPass\r\n        };\r\n\r\n        const options = {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        };\r\n        if (log !== \"\" && pass !== \"\"){\r\n            let resp = await fetch(\"login\", options);\r\n            if (resp.ok){\r\n                let json = await resp.json();\r\n                let role = json.role;\r\n                if (role === \"guest\"){\r\n                    this.setState({subContent: \"Неправильно введен логин или пароль.\"});\r\n                }\r\n                else if (role === \"diler\"){\r\n                    this.setState({subContent: \"\"});\r\n                    this.setState({content: <Button active={this.props.updateRole()} onClick={this.logOut}>Выйти</Button>});\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async logOut() {\r\n        const options = {\r\n            method: 'get',\r\n            headers: {\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n        let resp = await fetch(\"logOut\", options);\r\n        if (resp.ok) {\r\n            let json = await resp.json();\r\n            let role = json.role;\r\n\r\n            if (role === \"guest\") {\r\n\r\n                this.setState({content:\r\n                        <div>\r\n                            <p><input ref={(a) => this._loginElement = a} placeholder={\"Введите логин\"}/></p>\r\n                            <p><input ref={(b) => this._passElement = b} placeholder={\"Введите пароль\"}/></p>\r\n                            <p><Button active={this.props.updateRole()} type=\"submit\">submit</Button></p>\r\n                        </div>\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const options = {\r\n            method: 'get',\r\n            headers: {\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n        let resp = await fetch(\"checkLogin\", options);\r\n        if (resp.ok){\r\n            let json = await resp.json();\r\n            let role = json.role;\r\n            if (role === \"guest\"){\r\n                this.setState({content:\r\n                        <div>\r\n                            <p><input ref={(a) => this._loginElement = a} placeholder={\"Введите логин\"}/></p>\r\n                            <p><input ref={(b) => this._passElement = b} placeholder={\"Введите пароль\"}/></p>\r\n                            <p><Button type=\"submit\">submit</Button></p>\r\n                        </div>});\r\n            }\r\n            else if (role === \"diler\"){\r\n                this.setState({content: <Button onClick={this.logOut}>Выйти</Button>});\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal trigger={<Button icon=\"sign-in\">Вход</Button>} closeIcon>\r\n                <Header icon='sign-in' content='Вход' />\r\n                <Modal.Content>\r\n                    <Form onSubmit={this.getLogin}>\r\n                        {this.state.content}\r\n                    </Form>\r\n                    <p>{this.state.subContent}</p>\r\n                </Modal.Content>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginApp;","import React, {Component} from \"react\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport {Menu, Header, Segment, Grid} from 'semantic-ui-react';\r\nimport {\r\n    Route,\r\n    NavLink,\r\n    HashRouter\r\n} from \"react-router-dom\";\r\nimport MenuElement from \"./MenuElement\";\r\nimport getData from \"../GetData/GetData\";\r\nimport InfoBlock from \"../Modules/InfoBlock/InfoBlock\";\r\nimport LoginApp from \"../Modules/Login/LoginApp\";\r\n\r\nclass MainMenu extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dynamicMenu: \"…\",\r\n            menuElementRoute: \"…\",\r\n            outerData: \"\",\r\n            menuHeader: \"\",\r\n            role: \"guest\",\r\n        };\r\n        this.changeRole = this.changeRole.bind(this);\r\n    }\r\n\r\n    async getData(){\r\n        let data = await getData();\r\n        console.log(data)\r\n        this.setState({outerData: data})\r\n    }\r\n\r\n    getMenu(){\r\n        let data = this.state.outerData;\r\n        let menu = [];\r\n\r\n        const {activeItem} = this.state;\r\n\r\n        this.setState({menuHeader:\r\n                <NavLink to={\"/\"}>\r\n                    <Header as='h3' block>\r\n                        КА сервис\r\n                    </Header>\r\n                </NavLink>\r\n        });\r\n        for (let i = 0; i < data.length; i++){\r\n            if(i === 0 || data[i].group1 !== data[i - 1].group1)\r\n            {menu.push(\r\n                <NavLink to={\"/\" + data[i].group1}>\r\n                    <Menu.Item\r\n                        name={data[i].group1}\r\n                        active={activeItem === data[i].group1}\r\n                        onClick={this.handleItemClick}\r\n                    >\r\n                        {data[i].group1}\r\n                    </Menu.Item>\r\n                </NavLink>)}\r\n        }\r\n        menu.push(\r\n            <Menu.Item position='right'>\r\n                    <LoginApp updateRole = {this.changeRole}/>\r\n            </Menu.Item>\r\n        );\r\n        this.setState({dynamicMenu: menu})\r\n    }\r\n\r\n    changeRole(){\r\n        this.setState({role: \"diler\"});\r\n        this.getData().then(r => this.createComponents());\r\n    };\r\n\r\n    getMenuComponent(){\r\n        let  data = this.state.outerData;\r\n        let menuElement = [];\r\n        let menuElementData = [];\r\n        let headerData = {idModule: \"11\"};\r\n        menuElement.push(<Route exact path={\"/\"}  render={(props)=>\r\n            <Grid.Column stretched width={12}>\r\n                <Segment>\r\n                    <InfoBlock data={headerData} {...props}/>\r\n                </Segment>\r\n            </Grid.Column>\r\n        }  />);\r\n        for (let i = 0; i < data.length; i++){\r\n\r\n            if((i === data.length - 1 || data[i].group1 === data[i + 1].group1) && i !== data.length - 1){\r\n                menuElementData.push(data[i]);\r\n\r\n            }\r\n            else {\r\n                menuElementData.push(data[i]);\r\n                let outData = menuElementData;\r\n                menuElement.push(<Route path={\"/\" + data[i].group1}  render={(props)=><MenuElement data={outData} {...props}/>}  />);\r\n                menuElementData = [];\r\n\r\n            }\r\n\r\n        }\r\n        this.setState({menuElementRoute: menuElement})\r\n    }\r\n\r\n    createComponents(){\r\n        this.getMenu();\r\n        this.getMenuComponent();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData().then(r => this.createComponents());\r\n    }\r\n\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <HashRouter>\r\n                {this.state.menuHeader}\r\n                <Menu>\r\n                    {this.state.dynamicMenu}\r\n                </Menu>\r\n                <div id=\"content\">\r\n                    {this.state.menuElementRoute}\r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainMenu;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MainMenu from \"./Menu/MainMenu\";\r\n\r\nReactDOM.render(\r\n    <MainMenu/>,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}