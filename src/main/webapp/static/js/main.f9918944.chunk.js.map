{"version":3,"sources":["Modules/InetCatalog.js","Modules/InfoBlock/Text.js","Modules/InfoBlock/PrintImg.js","Modules/InfoBlock/InfoBlock.js","Modules/ProducerNom.js","Modules/FileBrowser.js","Modules/NewInfBlock.js","Modules/Status/reducer.js","Modules/Status/ModalApp.js","Modules/Status/ModalStore.js","Modules/Status/SecondModal.js","Modules/Status/StatusPrint.js","Modules/Status/TextLine.js","Modules/Status/App.js","Modules/Status/indexModal.js","Modules/Status/StatusImage.js","Modules/Status/ListImages.js","Modules/StatusApp/StatusText.js","Modules/StatusApp/GetStatus.js","Modules/StatusApp/ModalPart.js","Modules/StatusJournal/JournalTable.js","Modules/StatusJournal/StatusJournal.js","Modules/ChangePass/ChangePass.js","Modules/StatusApp/Status.js","Menu/MenuElement.js","GetData/GetData.js","Modules/Login/LoginApp.js","Menu/MainMenu.js","index.js"],"names":["InetCatalog","props","state","dataFromOut","data","this","module","Component","Text","text","PrintImg","printImg","img","setState","src","width","InfoBlock","printData","Dimmer","active","inverted","Loader","content","id","out","options","method","headers","body","fetch","resp","json","i","list","length","type","push","getData","idModule","ProducerNom","FileBrowser","NewInfBlock","reduction","xhr","action","undefined","modalAction","store","createStore","SecondModal","Modal","closeIcon","open","getState","onClose","dispatch","size","Header","icon","Content","Table","celled","selectable","Body","statusPrint","StatusPrint","Row","statusData","TextLine","Cell","statusLine","textAlign","statusText","ModalApp","stateList","modalStatus","sendData","bind","writeResponse","e","_firstElement","_secondElement","value","XMLHttpRequest","setRequestHeader","send","addEventListener","preventDefault","readyState","status","output","response","responseText","respJs","JSON","parse","repairBeginDate","console","log","repairEndDate","fullName","modelName","IMEI","equipment","issue","cost","comment","operation","Form","onSubmit","ref","a","placeholder","b","Button","onClick","openModal","modalValue","openAction","closeAction","connectedComponent","connect","closeModal","StatusImage","path","finalUrl","imagePath","encodePath","encodeURI","trigger","Icon","name","basic","image","Image","centered","ListImages","imgPath","imagesList","pathList","split","createImagesList","StatusText","operationsTable","statusElement","testState","cell","operations","listOfOperations","num","rowSpan","printVar","images","createOperations","createTable","GetStatus","printStatus","surname","number","ok","getStatusFromServer","ModalPart","statusModal","statusContent","changeState","closeModule","JournalTable","dataForPrint","changedComp","surName","repairNumber","printRow","printElement","ready","location","SN","HeaderCell","StatusJournal","onChange","date","Date","onChangeFirst","firstDate","handleChange","option","array","dataForOut","printJournal","getOptions","setMonth","getMonth","getTime","secondDate","_thirdElement","defaultValue","setDate","format","className","Dropdown","selection","key","ChangePass","message","sendPass","pass","_passElement","checkPass","_passCheckElement","sha1","require","encodePass","toUpperCase","sendChange","print","Status","MenuElement","handleItemClick","activeItem","menuItem","menuRoute","menuList","subMenuList","to","group1","Menu","Item","group3","idGroup2","item","group2","outData","exact","render","createSubMenu","createRoute","Grid","Column","fluid","vertical","tabular","stretched","Segment","style","overflow","minHeight","LoginApp","subContent","getLogin","logOut","_loginElement","hashPass","role","updateRole","MainMenu","dynamicMenu","menuElementRoute","outerData","menuHeader","changeRole","menu","as","block","position","then","r","createComponents","menuElement","menuElementData","headerData","getMenu","getMenuComponent","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f9918944.chunk.js","sourcesContent":["import React,{Component} from \"react\";\r\n\r\nclass InetCatalog extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n        };\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.dataFromOut.module}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InetCatalog;","import React, {Component} from \"react\";\r\n\r\nclass Text extends Component{\r\n    render() {\r\n        return(\r\n            <p>{this.props.text}</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Text;","import React, {Component} from \"react\";\r\n\r\nclass PrintImg extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.printImg,\r\n            printImg: \"\"\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let printImg = \"data:image/jpg;base64,\" + this.state.dataFromOut.img;\r\n\r\n        this.setState({printImg: printImg});\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <p>\r\n                <img src={this.state.printImg} width={700}/>\r\n            </p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PrintImg;","import React, {Component} from \"react\";\r\nimport Text from \"./Text\";\r\nimport PrintImg from \"./PrintImg\";\r\n\r\nimport { Dimmer, Loader} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass InfoBlock extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n            data: \"...\",\r\n            printData:\r\n                <Dimmer active inverted>\r\n                    <Loader inverted content='Loading' />\r\n                </Dimmer>\r\n        };\r\n    }\r\n\r\n    async getData(id) {\r\n        let out = [];\r\n        const options = {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" },\r\n            body: \"id=\" + id\r\n        };\r\n\r\n        let resp = await fetch(\"infoBlock\", options);\r\n        let data = await resp.json();\r\n        await this.setState({data: data});\r\n        for (let i = 0; i < data.list.length; i++){\r\n            if (data.list[i].type === \"1\") {\r\n                out.push(<Text text={data.list[i].data}/>);\r\n            }\r\n            else if(data.list[i].type === \"2\"){\r\n                out.push(<PrintImg printImg={data.list[i]}/>);\r\n\r\n            }\r\n        }\r\n        this.setState({printData: out});\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(this.state.dataFromOut.idModule);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.printData}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfoBlock;","import React,{Component} from \"react\";\r\n\r\nclass ProducerNom extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n        };\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.dataFromOut.module}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProducerNom;","import React,{Component} from \"react\";\r\n\r\nclass FileBrowser extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n        };\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.dataFromOut.module}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileBrowser;","import React,{Component} from \"react\";\r\n\r\nclass NewInfBlock extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n        };\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.dataFromOut.module}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewInfBlock;","function reduction(state, action) {\r\n    if (state === undefined){\r\n        return {modalAction: false};\r\n    }\r\n\r\n    var modalAction = state.modalAction;\r\n\r\n    switch (action.type) {\r\n        case \"open\":\r\n            return {modalAction: true};\r\n        case \"close\":\r\n            return {modalAction: false};\r\n        default:\r\n            return modalAction;\r\n    }\r\n}\r\n\r\nexport default reduction;","import React,{Component} from \"react\";\r\nimport SecondModal from \"./SecondModal\";\r\nimport StatusPrint from \"./StatusPrint\";\r\nimport {Button, Dimmer, Form, Loader, Table} from 'semantic-ui-react'\r\nimport TextLine from \"./TextLine\";\r\n\r\nvar xhr;\r\n\r\nclass ModalApp extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stateList:\r\n                <Dimmer active inverted>\r\n                    <Loader inverted content='Loading' />\r\n                </Dimmer>,\r\n            modalStatus: false\r\n        };\r\n\r\n        this.sendData = this.sendData.bind(this);\r\n        this.writeResponse = this.writeResponse.bind(this);\r\n    }\r\n\r\n    sendData(e){\r\n        if ((this._firstElement !== \"\") && (this._secondElement !== \"\")) {\r\n            var surname = this._firstElement.value;\r\n            var number = this._secondElement.value;\r\n            xhr = new XMLHttpRequest();\r\n            var body = \"surname=\" + surname + \"&number=\" + number;\r\n\r\n            xhr.open(\"POST\", \"status\", true);\r\n            xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n            xhr.send(body);\r\n\r\n            this._firstElement.value = \"\";\r\n            this._secondElement.value = \"\";\r\n            xhr.addEventListener(\"readystatechange\",\r\n                this.writeResponse, false);\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    writeResponse() {\r\n        if (xhr.readyState === 4 && xhr.status === 200) {\r\n            var output = [];\r\n            var response = xhr.responseText;\r\n            var respJs = JSON.parse(response);\r\n\r\n            var repairBeginDate = <TextLine statusLine = \"дата начала ремонта\" statusText = {respJs.repairBeginDate}/>;\r\n            console.log(repairBeginDate);\r\n            output.push(<StatusPrint statusData={repairBeginDate}/>);\r\n\r\n            var repairEndDate =<TextLine statusLine = \"дата завершения ремонта\" statusText = {respJs.repairEndDate}/>;\r\n            console.log(repairEndDate);\r\n            output.push(<StatusPrint statusData={repairEndDate}/>);\r\n\r\n            var fullName =<TextLine statusLine = \"ФИО\" statusText = {respJs.fullName}/>;\r\n            console.log(fullName);\r\n            output.push(<StatusPrint statusData={fullName}/>);\r\n\r\n            var modelName =<TextLine statusLine = \"модель\" statusText = {respJs.modelName}/>;\r\n            console.log(modelName);\r\n            output.push(<StatusPrint statusData={modelName}/>);\r\n\r\n            var IMEI = <TextLine statusLine = \"IMEI\" statusText = {respJs.IMEI}/>;\r\n            console.log(IMEI);\r\n            output.push(<StatusPrint statusData={IMEI}/>);\r\n\r\n            var equipment =<TextLine statusLine = \"комплектация\" statusText = {respJs.equipment}/>;\r\n            console.log(equipment);\r\n            output.push(<StatusPrint statusData={equipment}/>);\r\n\r\n            var issue =<TextLine statusLine = \"неисправность\" statusText = {respJs.issue}/>;\r\n            console.log(issue);\r\n            output.push(<StatusPrint statusData={issue}/>);\r\n\r\n            var cost =<TextLine statusLine = \"стоимость ремонта\" statusText = {respJs.cost}/>;\r\n            console.log(cost);\r\n            output.push(<StatusPrint statusData={cost}/>);\r\n\r\n            var comment =<TextLine statusLine = \"комментарий\" statusText = {respJs.comment}/>;\r\n            console.log(comment);\r\n            output.push(<StatusPrint statusData={comment}/>);\r\n\r\n            var operation =<TextLine statusLine = \"выполненная работа\" statusText = {respJs.operation}/>;\r\n            console.log(operation);\r\n            output.push(<StatusPrint statusData={operation}/>);\r\n\r\n\r\n            this.setState({\r\n                stateList: output\r\n            });\r\n\r\n        }\r\n\r\n        else {\r\n            console.log(\"test of invalid username\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Form onSubmit={this.sendData}>\r\n                    <p><input ref={(a) => this._firstElement = a} placeholder={\"Введите фамилию\"}/></p>\r\n\r\n                    <p><input ref={(b) => this._secondElement = b} placeholder={\"Введите номер заявки\"}/></p>\r\n\r\n                    <p><Button type=\"submit\" onClick={this.props.openModal}>submit</Button></p>\r\n                </Form>\r\n                <p>{console.log(this.props.modalValue)}</p>\r\n                <SecondModal statusPrint = {this.state.stateList}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalApp;","import reduction from \"./reducer\";\r\nimport {createStore} from \"redux\";\r\n\r\nvar store = createStore(reduction);\r\n\r\nexport default store;","import React,{Component} from \"react\";\r\nimport store from \"./ModalStore\";\r\nimport { Header, Modal, Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass SecondModal extends Component{\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Modal\r\n                    closeIcon\r\n                    open={store.getState().modalAction}\r\n                    onClose={() => {store.dispatch({type: \"close\"})}}\r\n                    size='small'\r\n                >\r\n                    <Header icon='browser' content='Состояние ремонта' />\r\n                    <Modal.Content>\r\n                        <div>\r\n                            <Table celled selectable>\r\n                                <Table.Body>\r\n                                    {this.props.statusPrint}\r\n                                </Table.Body>\r\n                            </Table>\r\n                        </div>\r\n                    </Modal.Content>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SecondModal;","import React, {Component} from \"react\";\r\nimport { Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass StatusPrint extends Component{\r\n    render() {\r\n        return(\r\n            <Table.Row>\r\n                {this.props.statusData}\r\n            </Table.Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StatusPrint;","import React, {Component} from \"react\";\r\nimport { Table } from 'semantic-ui-react'\r\n\r\nclass TextLine extends Component{\r\n    render() {\r\n        return(\r\n            <Table.Row>\r\n                <Table.Cell>{this.props.statusLine}</Table.Cell>\r\n                <Table.Cell textAlign='right'>{this.props.statusText}</Table.Cell>\r\n            </Table.Row>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextLine;","import {connect} from \"react-redux\";\r\nimport ModalApp from \"./ModalApp\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        modalValue: state.modalAction\r\n    }\r\n}\r\n\r\nvar openAction = {type: \"open\"};\r\nvar closeAction = {type: \"close\"};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return{\r\n        openModal: function () {\r\n            return dispatch(openAction);\r\n        },\r\n        closeModal: function () {\r\n            return dispatch(closeAction);\r\n        }\r\n    };\r\n}\r\n\r\n\r\n\r\nvar connectedComponent = connect(\r\n    mapStateToProps, mapDispatchToProps\r\n    )(ModalApp);\r\n\r\nexport default connectedComponent;\r\n\r\n","import React, {Component} from \"react\";\r\nimport {Provider} from \"react-redux\";\r\nimport App from \"./App\";\r\nimport store from \"./ModalStore\";\r\n\r\n\r\nclass IndexModal extends Component {\r\n    render() {\r\n        return(\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IndexModal;","import React,{Component} from \"react\";\r\nimport {Modal, Image, Icon} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass StatusImage extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.path,\r\n            finalUrl: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let imagePath = \"statusImage?path=\" + this.state.dataFromOut;\r\n        let encodePath = encodeURI(imagePath);\r\n        this.setState({\r\n            finalUrl: encodePath\r\n        });\r\n        console.log(imagePath);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal trigger={<Icon name=\"picture\" size='huge' />} basic>\r\n                <Modal.Content image>\r\n                    <Image centered size='huge' src={this.state.finalUrl} />\r\n                </Modal.Content>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StatusImage;","import React,{Component} from \"react\";\r\nimport {Icon} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport StatusImage from \"./StatusImage\";\r\n\r\nclass ListImages extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.imgPath,\r\n            imagesList: []\r\n        };\r\n    }\r\n\r\n    createImagesList() {\r\n        let list = [];\r\n        let pathList = this.state.dataFromOut.split(\"$\");\r\n        for(let i = 0; i < pathList.length - 1; i++){\r\n            list.push(\r\n                <StatusImage path={pathList[i]}/>\r\n            )\r\n        }\r\n        this.setState({\r\n            imagesList: list\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createImagesList()\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.imagesList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListImages;","import React,{Component} from \"react\";\r\nimport {Table} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nimport ListImages from \"../Status/ListImages\";\r\n\r\nclass StatusText extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            operationsTable: \"\",\r\n            statusElement: \"\",\r\n            testState: \"123\"\r\n        };\r\n    }\r\n\r\n    createOperations(list){\r\n        let cell = [];\r\n        let operations = list.operation;\r\n        console.log((operations !== \"\") + \" работы\");\r\n        if ((operations !== undefined) && (operations !== \"\")){\r\n            let listOfOperations = operations.split(\"$\");\r\n            let num = listOfOperations.length - 1;\r\n            cell.push(\r\n                <Table.Row>\r\n                    <Table.Cell rowSpan={num}>Выполненые работы:</Table.Cell>\r\n                    <Table.Cell>{listOfOperations[0]}</Table.Cell>\r\n                </Table.Row>\r\n            );\r\n            for (let i = 1; i < num; i++){\r\n                cell.push(\r\n                    <Table.Row>\r\n                        <Table.Cell>{listOfOperations[i]}</Table.Cell>\r\n                    </Table.Row>\r\n                )\r\n            }\r\n            this.setState({\r\n                operationsTable: cell\r\n            });\r\n        }\r\n    }\r\n\r\n    createTable(list){\r\n        let printVar = [];\r\n        let repairBeginDate =\r\n            <Table.Row>\r\n                <Table.Cell>Дата начала ремонта</Table.Cell>\r\n                <Table.Cell>{list.repairBeginDate}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(repairBeginDate);\r\n\r\n        let repairEndDate =\r\n            <Table.Row>\r\n                <Table.Cell>Дата завершения ремонта</Table.Cell>\r\n                <Table.Cell>{list.repairEndDate}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(repairEndDate);\r\n\r\n        let state =\r\n            <Table.Row>\r\n                <Table.Cell>Состояние ремонта</Table.Cell>\r\n                <Table.Cell>{list.state}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(state);\r\n\r\n        let fullName =\r\n            <Table.Row>\r\n                <Table.Cell>ФИО</Table.Cell>\r\n                <Table.Cell>{list.fullName}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(fullName);\r\n\r\n        let modelName =\r\n            <Table.Row>\r\n                <Table.Cell>Модель</Table.Cell>\r\n                <Table.Cell>{list.modelName}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(modelName);\r\n\r\n        let IMEI =\r\n            <Table.Row>\r\n                <Table.Cell>IMEI</Table.Cell>\r\n                <Table.Cell>{list.IMEI}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(IMEI);\r\n\r\n        let equipment =\r\n            <Table.Row>\r\n                <Table.Cell>Комплектация</Table.Cell>\r\n                <Table.Cell>{list.equipment}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(equipment);\r\n\r\n        let issue =\r\n            <Table.Row>\r\n                <Table.Cell>Неисправность</Table.Cell>\r\n                <Table.Cell>{list.issue}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(issue);\r\n\r\n        let cost =\r\n            <Table.Row>\r\n                <Table.Cell>Стоимость ремонта</Table.Cell>\r\n                <Table.Cell>{list.cost}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(cost);\r\n\r\n        let comment =\r\n            <Table.Row>\r\n                <Table.Cell>Комментарий</Table.Cell>\r\n                <Table.Cell>{list.comment}</Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(comment);\r\n\r\n        printVar.push(this.state.operationsTable);\r\n\r\n        let images =\r\n            <Table.Row>\r\n                <Table.Cell>Фотографии ремонта</Table.Cell>\r\n                <Table.Cell>\r\n                    <ListImages imgPath={list.images}/>\r\n                </Table.Cell>\r\n            </Table.Row>;\r\n        printVar.push(images);\r\n\r\n        this.setState({\r\n            statusElement: printVar\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.createOperations(this.props.text);\r\n        await this.createTable(this.props.text);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table celled selectable>\r\n                <Table.Body>\r\n                        {this.state.statusElement}\r\n                </Table.Body>\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatusText;","import React,{Component} from \"react\";\r\nimport StatusText from \"./StatusText\";\r\nimport {Dimmer, Loader} from \"semantic-ui-react\";\r\n\r\nclass GetStatus extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            printStatus: \"\"\r\n        };\r\n    }\r\n\r\n    async getStatusFromServer(){\r\n        let surname = this.props.name;\r\n        let number = this.props.number;\r\n        const options = {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" },\r\n            body: \"surname=\" + surname + \"&number=\" + number\r\n        };\r\n        if ((surname !== \"\" && number !== \"\") || (surname !== undefined && number !== undefined)){\r\n            this.setState({printStatus:\r\n                    <Dimmer active inverted>\r\n                        <Loader inverted content='Loading' />\r\n                    </Dimmer>\r\n            });\r\n            let resp = await fetch(\"status\", options);\r\n            if (resp.ok) {\r\n                let json = await resp.json();\r\n                console.log(json);\r\n                if (json === null){\r\n                    this.setState({printStatus: \"Неправильно введена фамилия или номер заявки\"});\r\n                }\r\n                else this.setState({printStatus: <StatusText text = {json}/>});\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getStatusFromServer();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.printStatus}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GetStatus;","import React,{Component} from \"react\";\r\nimport {Button, Header, Form, Modal, Dimmer, Loader} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport GetStatus from \"./GetStatus\";\r\n\r\nclass ModalPart extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            statusModal: this.props.statusModal,\r\n            statusContent: \"\"\r\n        };\r\n        this.changeState = this.changeState.bind(this);\r\n    }\r\n\r\n    async changeState(){\r\n        await this.setState({statusModal: false});\r\n        await this.props.closeModule();\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.setState({statusContent:\r\n                <GetStatus\r\n                    name = {this.props.name}\r\n                    number = {this.props.number}\r\n                />\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Modal\r\n                    open={this.state.statusModal}\r\n                    onClose={this.changeState}\r\n                    closeIcon\r\n                >\r\n                    <Header icon='archive' content='Состояние заявки'/>\r\n                    <Modal.Content>\r\n                        {this.state.statusContent}\r\n                    </Modal.Content>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalPart;","import React, {Component} from \"react\";\r\nimport { Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport ModalPart from \"../StatusApp/ModalPart\";\r\n\r\nclass JournalTable extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n            dataForPrint: \"\",\r\n            statusModal: true,\r\n            changedComp: \"\"\r\n        };\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModule = this.closeModule.bind(this);\r\n    }\r\n\r\n    closeModule(){\r\n        this.setState({changedComp: \"\"})\r\n    }\r\n\r\n    async openModal(surName, repairNumber){\r\n        let name = surName;\r\n        let number = repairNumber;\r\n        let b = <ModalPart\r\n            statusModal = {this.state.statusModal}\r\n            closeModule = {this.closeModule}\r\n            name = {name}\r\n            number = {number}\r\n        />;\r\n        await this.setState({changedComp: b});\r\n    }\r\n\r\n    createTable(){\r\n\r\n        let printRow = [];\r\n        let list = this.state.dataFromOut.list;\r\n        console.log(list);\r\n        console.log(list.length);\r\n        if (list.length !== 0) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                let printElement =\r\n                    <Table.Row onClick = {this.openModal.bind(this, list[i].fullName, list[i].number)}>\r\n                        <Table.Cell>{list[i].ready}</Table.Cell>\r\n                        <Table.Cell>{list[i].state}</Table.Cell>\r\n                        <Table.Cell> </Table.Cell>\r\n                        <Table.Cell>{list[i].number}</Table.Cell>\r\n                        <Table.Cell>{list[i].repairBeginDate}</Table.Cell>\r\n                        <Table.Cell>{list[i].location}</Table.Cell>\r\n                        <Table.Cell>{list[i].modelName}</Table.Cell>\r\n                        <Table.Cell>{list[i].SN}</Table.Cell>\r\n                        <Table.Cell>{list[i].IMEI}</Table.Cell>\r\n                        <Table.Cell>{list[i].cost}</Table.Cell>\r\n                        <Table.Cell>{list[i].fullName}</Table.Cell>\r\n                    </Table.Row>;\r\n                printRow.push(printElement);\r\n            }\r\n            this.setState({dataForPrint: printRow})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createTable();\r\n        console.log(this.state.dataFromOut)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Table celled selectable>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Готово к выдаче</Table.HeaderCell>\r\n                            <Table.HeaderCell>Статус</Table.HeaderCell>\r\n                            <Table.HeaderCell>Тип ремонта</Table.HeaderCell>\r\n                            <Table.HeaderCell>Номер заявки</Table.HeaderCell>\r\n                            <Table.HeaderCell>Дата начала ремонта</Table.HeaderCell>\r\n                            <Table.HeaderCell>Текущее местоположение</Table.HeaderCell>\r\n                            <Table.HeaderCell>Модель</Table.HeaderCell>\r\n                            <Table.HeaderCell>Серийный номер</Table.HeaderCell>\r\n                            <Table.HeaderCell>IMEI</Table.HeaderCell>\r\n                            <Table.HeaderCell>Сумма</Table.HeaderCell>\r\n                            <Table.HeaderCell>Клиент</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {this.state.dataForPrint}\r\n                    </Table.Body>\r\n                </Table>\r\n                {this.state.changedComp}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JournalTable;","import React, {Component} from \"react\";\r\nimport ModernDatepicker from 'react-modern-datepicker';\r\nimport {Dropdown, Form, Button, Loader, Dimmer} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"./StatusJournal.css\"\r\nimport JournalTable from \"./JournalTable\";\r\n\r\nclass StatusJournal extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date(),\r\n            firstDate: new Date(),\r\n            option: \"\",\r\n            array: \"\",\r\n            dataForOut: \"\",\r\n            printJournal: \"\"\r\n        };\r\n        this.getOptions = this.getOptions.bind(this);\r\n    }\r\n\r\n    setDate(){\r\n        let date = new Date();\r\n        date.setMonth(date.getMonth() - 2);\r\n        this.setState({firstDate: date});\r\n    }\r\n\r\n    async getOptions(){\r\n        let firstDate = this.state.date.getTime();\r\n        let secondDate = this.state.firstDate.getTime();\r\n        let option;\r\n        if (this._thirdElement.props.value === undefined){\r\n            option = this._thirdElement.props.defaultValue;\r\n        }\r\n        else {\r\n            option = this._thirdElement.props.value;\r\n        }\r\n        await this.setState({array: [firstDate, secondDate, option]});\r\n        await this.sendData();\r\n    }\r\n\r\n    async sendData(){\r\n        this.setState({printJournal:\r\n                <Dimmer active inverted>\r\n                    <Loader inverted content='Loading' />\r\n                </Dimmer>\r\n        });\r\n        const options = {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" },\r\n            body: \"firstDate=\" + this.state.array[0] + \"&secondDate=\" + this.state.array[1] + \"&option=\" + this.state.array[2]\r\n        };\r\n        let resp = await fetch(\"statusJournal\", options);\r\n        if (resp.ok) {\r\n            let data = await resp.json();\r\n            this.setState({dataForOut: data});\r\n            this.setState({printJournal: <JournalTable data={this.state.dataForOut}/>});\r\n            console.log(data)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setDate();\r\n    }\r\n\r\n    onChange = date => this.setState({ date: new Date(date.split(\"-\")[2], date.split(\"-\")[1] - 1, date.split(\"-\")[0])});\r\n    onChangeFirst = firstDate => this.setState({ firstDate: new Date(firstDate.split(\"-\")[2], firstDate.split(\"-\")[1] - 1, firstDate.split(\"-\")[0]) });\r\n    handleChange = (e, { value }) => this.setState({ value });\r\n\r\n    render() {\r\n        const options = [\r\n            { key: 1, text: 'Все за период', value: 1 },\r\n            { key: 2, text: 'Готово к выдаче', value: 2 },\r\n            { key: 3, text: 'Не готово к выдаче (ремонтируется)', value: 3 },\r\n        ];\r\n        const { value } = this.state;\r\n        return(\r\n            <Form onSubmit={this.getOptions}>\r\n                Журнал заявок с\r\n                <p><ModernDatepicker\r\n                    ref={(a) => this._firstElement = a}\r\n                    onChange={this.onChangeFirst}\r\n                    date={this.state.firstDate}\r\n                    format={'DD-MM-YYYY'}\r\n                    className=\"color\"\r\n                /></p>\r\n                <p>по</p>\r\n                <p><ModernDatepicker\r\n                    ref={(a) => this._secondElement = a}\r\n                    onChange={this.onChange}\r\n                    date={this.state.date}\r\n                    format={'DD-MM-YYYY'}\r\n                    className=\"color\"\r\n                /></p>\r\n                <p>\r\n                    <Dropdown\r\n                        ref={(a) => this._thirdElement = a}\r\n                        selection\r\n                        options={options}\r\n                        defaultValue={1}\r\n                        onChange={this.handleChange}\r\n                        value={value}\r\n                    />\r\n                    <Button type=\"submit\">Открыть</Button>\r\n                </p>\r\n                <p>{this.state.printJournal}</p>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StatusJournal;","import React,{Component} from \"react\";\r\nimport {Button, Form} from \"semantic-ui-react\";\r\nimport 'js-sha1';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass ChangePass extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            message: \"\"\r\n        };\r\n        this.sendPass = this.sendPass.bind(this);\r\n    }\r\n\r\n    async sendPass(e){\r\n        let pass = this._passElement.value;\r\n        let checkPass = this._passCheckElement.value;\r\n        let sha1 = require('sha1');\r\n        let encodePass = sha1(pass).toUpperCase();\r\n\r\n        let message = await this.sendChange(pass, checkPass, encodePass);\r\n        let print = <p>{message}</p>;\r\n        this.setState({message: print})\r\n    }\r\n\r\n    async sendChange(pass, checkPass, encodePass) {\r\n        const options = {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" },\r\n            body: \"pass=\" + encodePass\r\n        };\r\n        if ((pass !== \"\" && checkPass !== \"\") && (pass === checkPass)){\r\n            let resp = await fetch(\"changePass\", options);\r\n            if (resp.ok) {\r\n                let data = await resp.json();\r\n                console.log(data)\r\n                return \"Пароль изменен\";\r\n            }\r\n        }\r\n        else if(pass !== checkPass){\r\n            return \"Введенные пароли не совпадают\";\r\n        }\r\n        else if(pass === \"\" && checkPass === \"\"){\r\n            return \"Введите новый пароль\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Form onSubmit={this.sendPass}>\r\n                <p><input ref={(a) => this._passElement = a} placeholder={\"Введите новый пароль\"}/></p>\r\n                <p><input ref={(a) => this._passCheckElement = a} placeholder={\"Повторно введите новый пароль\"}/></p>\r\n                <p><Button type=\"submit\">submit</Button></p>\r\n                {this.state.message}\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangePass;","import React, {Component} from \"react\";\r\nimport {Button, Header, Form, Modal, Dimmer, Loader} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport ModalPart from \"./ModalPart\";\r\n\r\nclass Status extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            statusModal: true,\r\n            changedComp: \"\"\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModule = this.closeModule.bind(this);\r\n    }\r\n\r\n    closeModule(){\r\n        this.setState({changedComp: \"\"})\r\n    }\r\n\r\n    async openModal(){\r\n        let name = this._firstElement.value;\r\n        let number = this._secondElement.value;\r\n        let b = <ModalPart\r\n            statusModal = {this.state.statusModal}\r\n            closeModule = {this.closeModule}\r\n            name = {name}\r\n            number = {number}\r\n        />;\r\n        await this.setState({changedComp: b});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n\r\n            <Form>\r\n                <p><input ref={(a) => this._firstElement = a} placeholder={\"Введите фамилию\"}/></p>\r\n\r\n                <p><input ref={(b) => this._secondElement = b} placeholder={\"Введите номер заявки\"}/></p>\r\n\r\n                <p><Button type=\"submit\" onClick={this.openModal}>Показать</Button></p>\r\n                {this.state.changedComp}\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Status;","import React,{Component} from \"react\";\r\nimport { Dropdown, Menu, Grid, Segment } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {\r\n    Route,\r\n    NavLink,\r\n    HashRouter\r\n} from \"react-router-dom\";\r\n\r\nimport InetCatalog from \"../Modules/InetCatalog\";\r\nimport InfoBlock from \"../Modules/InfoBlock/InfoBlock\";\r\nimport ProducerNom from \"../Modules/ProducerNom\";\r\nimport FileBrowser from \"../Modules/FileBrowser\";\r\nimport NewInfBlock from \"../Modules/NewInfBlock\";\r\nimport IndexModal from \"../Modules/Status/indexModal\";\r\nimport StatusJournal from \"../Modules/StatusJournal/StatusJournal\";\r\nimport ChangePass from \"../Modules/ChangePass/ChangePass\";\r\nimport Status from \"../Modules/StatusApp/Status\";\r\n\r\nclass MenuElement extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFromOut: this.props.data,\r\n            menuItem: \"\",\r\n            activeItem: \"\",\r\n            menuRoute: \"\"\r\n        };\r\n    }\r\n\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n    createSubMenu(){\r\n        let data = this.state.dataFromOut;\r\n        let menuList = [];\r\n        let subMenuList = [];\r\n\r\n        for (let i = 0; i < data.length; i++){\r\n            if (i === 0) {\r\n                menuList.push(\r\n                    <NavLink to={\"/\" + data[i].group1 + \"/\"}>\r\n                        <Menu.Item\r\n                            name={data[i].group3}\r\n                            active={this.state.activeItem === data[i].group3}\r\n                            onClick={this.handleItemClick}\r\n                        />\r\n                    </NavLink>\r\n                )\r\n            }\r\n            else if (data[i].idGroup2 === \"0\"){\r\n                menuList.push(\r\n                    <NavLink to={\"/\" + data[i].group1 + \"/\" + data[i].group3}>\r\n                        <Menu.Item\r\n                            name={data[i].group3}\r\n                            active={this.state.activeItem === data[i].group3}\r\n                            onClick={this.handleItemClick}\r\n                        />\r\n                    </NavLink>\r\n                )\r\n            }\r\n            else {\r\n                if(i !== data.length - 1 && data[i].idGroup2 === data[i + 1].idGroup2){\r\n                    subMenuList.push(\r\n                        <NavLink to={\"/\" + data[i].group1 + \"/\" + data[i].group3}>\r\n                            <Dropdown.Item>{data[i].group3}</Dropdown.Item>\r\n                        </NavLink>\r\n                    )\r\n                }\r\n                else {\r\n                    subMenuList.push(\r\n                        <NavLink to={\"/\" + data[i].group1 + \"/\" + data[i].group3}>\r\n                            <Dropdown.Item>{data[i].group3}</Dropdown.Item>\r\n                        </NavLink>\r\n                    );\r\n                    menuList.push(\r\n                        <Dropdown item text = {data[i].group2}>\r\n                            <Dropdown.Menu>\r\n                                {subMenuList}\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    );\r\n                    subMenuList = [];\r\n                }\r\n            }\r\n        }\r\n        this.setState({menuItem: menuList});\r\n    }\r\n\r\n    createRoute(){\r\n        let data = this.state.dataFromOut;\r\n        let menuRoute = [];\r\n\r\n        for (let i = 0; i < data.length; i++){\r\n            if(i === 0) {\r\n                if (data[i].module === \"~/REM/REM_Zayavka.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <Status data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/Spr/SprInetCatalog.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <InetCatalog data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/ART/ART_FormaElementaInfBlock.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <InfoBlock data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/Spr/ProducerNom/SprProducerNom.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <ProducerNom data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/KasFileBrowser/KasFileBrowser.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <FileBrowser data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/HLP/HLP_FormaSpiskaInfBlock.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <NewInfBlock data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/REM/REM_GurZForDialer.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <StatusJournal data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/ChangePassword.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\"}\r\n                                          render={(props) => <ChangePass data={outData} {...props}/>}/>);\r\n                }\r\n            }\r\n            else {\r\n                if (data[i].module === \"~/REM/REM_Zayavka.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <Status data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/Spr/SprInetCatalog.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <InetCatalog data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/ART/ART_FormaElementaInfBlock.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <InfoBlock data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/Spr/ProducerNom/SprProducerNom.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <ProducerNom data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/KasFileBrowser/KasFileBrowser.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <FileBrowser data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/HLP/HLP_FormaSpiskaInfBlock.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <NewInfBlock data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/REM/REM_GurZForDialer.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <StatusJournal data={outData} {...props}/>}/>);\r\n                }\r\n                if (data[i].module === \"~/ChangePassword.aspx\") {\r\n                    let outData = data[i];\r\n                    menuRoute.push(<Route exact path={\"/\" + data[i].group1 + \"/\" + data[i].group3}\r\n                                          render={(props) => <ChangePass data={outData} {...props}/>}/>);\r\n                }\r\n            }\r\n        }\r\n        this.setState({menuRoute: menuRoute});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createSubMenu();\r\n        this.createRoute();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <HashRouter>\r\n                <Grid>\r\n                    <Grid.Column width={4}>\r\n                        <Menu fluid vertical tabular>\r\n                            {this.state.menuItem}\r\n                        </Menu>\r\n                    </Grid.Column>\r\n                    <Grid.Column stretched width={12}>\r\n                        <Segment style={{overflow: 'auto', minHeight: 490}}>\r\n                            {this.state.menuRoute}\r\n                        </Segment>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MenuElement;","async function getData() {\r\n    let url = \"menu\";\r\n    let list;\r\n    let response = await fetch(url);\r\n\r\n    if (response.ok) {\r\n        let json = await response.json();\r\n        list = await json.list;\r\n    }\r\n    return list;\r\n}\r\n\r\nexport default getData;","import React,{Component} from \"react\";\r\nimport { Button, Header, Modal, Form } from 'semantic-ui-react'\r\nimport 'js-sha1';\r\n\r\nclass LoginApp extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            content: \"\",\r\n            subContent: \"\"\r\n        };\r\n        this.getLogin = this.getLogin.bind(this);\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    async getLogin(e){\r\n        let log = this._loginElement.value;\r\n        let pass = this._passElement.value;\r\n        let sha1 = require('sha1');\r\n        let hashPass = sha1(pass).toUpperCase();\r\n\r\n        const options = {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" },\r\n            body: \"log=\" + log + \"&pass=\" + hashPass\r\n        };\r\n        if (log !== \"\" && pass !== \"\"){\r\n            let resp = await fetch(\"login\", options);\r\n            if (resp.ok){\r\n                let json = await resp.json();\r\n                let role = json.role;\r\n                if (role === \"guest\"){\r\n                    this.setState({subContent: \"Неправильно введен логин или пароль.\"});\r\n                }\r\n                else if (role === \"diler\"){\r\n                    this.setState({subContent: \"\"});\r\n                    this.setState({content: <Button active={this.props.updateRole()} onClick={this.logOut}>Выйти</Button>});\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async logOut() {\r\n        let resp = await fetch(\"logOut\");\r\n        if (resp.ok) {\r\n            let json = await resp.json();\r\n            let role = json.role;\r\n\r\n            if (role === \"guest\") {\r\n\r\n                this.setState({content:\r\n                        <div>\r\n                            <p><input ref={(a) => this._loginElement = a} placeholder={\"Введите логин\"}/></p>\r\n                            <p><input ref={(b) => this._passElement = b} placeholder={\"Введите пароль\"}/></p>\r\n                            <p><Button active={this.props.updateRole()} type=\"submit\">submit</Button></p>\r\n                        </div>\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resp = await fetch(\"checkLogin\");\r\n        if (resp.ok){\r\n            let json = await resp.json();\r\n            let role = json.role;\r\n            if (role === \"guest\"){\r\n                this.setState({content:\r\n                        <div>\r\n                            <p><input ref={(a) => this._loginElement = a} placeholder={\"Введите логин\"}/></p>\r\n                            <p><input ref={(b) => this._passElement = b} placeholder={\"Введите пароль\"}/></p>\r\n                            <p><Button type=\"submit\">submit</Button></p>\r\n                        </div>});\r\n            }\r\n            else if (role === \"diler\"){\r\n                this.setState({content: <Button onClick={this.logOut}>Выйти</Button>});\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal trigger={<Button icon=\"sign-in\">Вход</Button>} closeIcon>\r\n                <Header icon='sign-in' content='Вход' />\r\n                <Modal.Content>\r\n                    <Form onSubmit={this.getLogin}>\r\n                        {this.state.content}\r\n                    </Form>\r\n                    <p>{this.state.subContent}</p>\r\n                </Modal.Content>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginApp;","import React, {Component} from \"react\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport {Menu, Header, Segment, Grid} from 'semantic-ui-react';\r\nimport {\r\n    Route,\r\n    NavLink,\r\n    HashRouter\r\n} from \"react-router-dom\";\r\nimport MenuElement from \"./MenuElement\";\r\nimport getData from \"../GetData/GetData\";\r\nimport InfoBlock from \"../Modules/InfoBlock/InfoBlock\";\r\nimport LoginApp from \"../Modules/Login/LoginApp\";\r\n\r\nclass MainMenu extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dynamicMenu: \"…\",\r\n            menuElementRoute: \"…\",\r\n            outerData: \"\",\r\n            menuHeader: \"\",\r\n            role: \"guest\",\r\n        };\r\n        this.changeRole = this.changeRole.bind(this);\r\n    }\r\n\r\n    async getData(){\r\n        let data = await getData();\r\n        this.setState({outerData: data})\r\n    }\r\n\r\n    getMenu(){\r\n        let data = this.state.outerData;\r\n        let menu = [];\r\n\r\n        const {activeItem} = this.state;\r\n\r\n        this.setState({menuHeader:\r\n                <NavLink to={\"/\"}>\r\n                    <Header as='h3' block>\r\n                        КА сервис\r\n                    </Header>\r\n                </NavLink>\r\n        });\r\n        for (let i = 0; i < data.length; i++){\r\n            if(i === 0 || data[i].group1 !== data[i - 1].group1)\r\n            {menu.push(\r\n                <NavLink to={\"/\" + data[i].group1}>\r\n                    <Menu.Item\r\n                        name={data[i].group1}\r\n                        active={activeItem === data[i].group1}\r\n                        onClick={this.handleItemClick}\r\n                    >\r\n                        {data[i].group1}\r\n                    </Menu.Item>\r\n                </NavLink>)}\r\n        }\r\n        menu.push(\r\n            <Menu.Item position='right'>\r\n                    <LoginApp updateRole = {this.changeRole}/>\r\n            </Menu.Item>\r\n        );\r\n        this.setState({dynamicMenu: menu})\r\n    }\r\n\r\n    changeRole(){\r\n        this.setState({role: \"diler\"});\r\n        this.getData().then(r => this.createComponents());\r\n    };\r\n\r\n    getMenuComponent(){\r\n        let  data = this.state.outerData;\r\n        let menuElement = [];\r\n        let menuElementData = [];\r\n        let headerData = {idModule: \"11\"};\r\n        menuElement.push(<Route exact path={\"/\"}  render={(props)=>\r\n            <Grid.Column stretched width={12}>\r\n                <Segment>\r\n                    <InfoBlock data={headerData} {...props}/>\r\n                </Segment>\r\n            </Grid.Column>\r\n        }  />);\r\n        for (let i = 0; i < data.length; i++){\r\n\r\n            if((i === data.length - 1 || data[i].group1 === data[i + 1].group1) && i !== data.length - 1){\r\n                menuElementData.push(data[i]);\r\n\r\n            }\r\n            else {\r\n                menuElementData.push(data[i]);\r\n                let outData = menuElementData;\r\n                menuElement.push(<Route path={\"/\" + data[i].group1}  render={(props)=><MenuElement data={outData} {...props}/>}  />);\r\n                menuElementData = [];\r\n\r\n            }\r\n\r\n        }\r\n        this.setState({menuElementRoute: menuElement})\r\n    }\r\n\r\n    createComponents(){\r\n        this.getMenu();\r\n        this.getMenuComponent();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData().then(r => this.createComponents());\r\n    }\r\n\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <HashRouter>\r\n                {this.state.menuHeader}\r\n                <Menu>\r\n                    {this.state.dynamicMenu}\r\n                </Menu>\r\n                <div id=\"content\">\r\n                    {this.state.menuElementRoute}\r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainMenu;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MainMenu from \"./Menu/MainMenu\";\r\n\r\nReactDOM.render(\r\n    <MainMenu/>,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}